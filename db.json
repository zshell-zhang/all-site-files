{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/^-","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514909575524},{"_id":"source/_posts/linux-shell--bash数组与映射.md","hash":"06daf749bafbff6851b24ceaca542243c22706ed","modified":1514992691226},{"_id":"source/_posts/linux-shell--bash条件判断全梳理.md","hash":"684a8bade06fd83db7344ee3f4e7e53b4dca8462","modified":1514907657771},{"_id":"source/_posts/linux-shell--bash结束死循环的方法.md","hash":"0387df780421ea28436ae0f1284da10d37c57258","modified":1514907681515},{"_id":"source/_posts/rsync-rsyncd配置与运行.md","hash":"e0627740eca0231886c4216d7a0add6a062df7f4","modified":1514993335875},{"_id":"source/_posts/证券-财富先锋-财富先锋2017年各股池成绩单.md","hash":"98a87185460a0bb421e1b4e2d9f73c727a1fdcd0","modified":1514909264593},{"_id":"source/about/index.md","hash":"7e58848b6707f14116653dc332c57f7710ccaa78","modified":1514791560530},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1514465959000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1514465959000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1514465959000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1514465959000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1514465959000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1514465959000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1514465959000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1514465959000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1514465959000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1514465959000},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1514465959000},{"_id":"themes/next/README.md","hash":"aa2fb15ef016074b10755323c99025df506d5ca3","modified":1514465959000},{"_id":"themes/next/_config.yml","hash":"64325b325473627771b915d0e17ccefa2524ae5b","modified":1514801969495},{"_id":"themes/next/bower.json","hash":"6d6ae7531cf3fedc97c58cdad664f5793eb3cc88","modified":1514465959000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1514465959000},{"_id":"themes/next/package.json","hash":"93a74dbc0fe3a1208a02e9cec3c15c2375339cc1","modified":1514465959000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1514465959000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1514465959000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1514465959000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1514465959000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1514465959000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1514465959000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1514465959000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1514465959000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1514465959000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1514465959000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1514465959000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1514465959000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1514465959000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1514465959000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1514465959000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1514465959000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1514465959000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"c90ce83b39b879871e4594bb3f6c220f9a0466d0","modified":1514795775744},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1514465959000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1514465959000},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1514465959000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1514465959000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1514465959000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1514465959000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1514465959000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1514465959000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1514465959000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1514465959000},{"_id":"themes/next/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1514465959000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1514465959000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1514465959000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1514465959000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1514465959000},{"_id":"source/categories/index.md","hash":"9059810d4bea597318151a26b6702190e4695d89","modified":1514815093229},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514465959000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514465959000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1514465959000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1514465959000},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1514465959000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1514465959000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1514465959000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1514465959000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1514465959000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1514465959000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1514465959000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1514465959000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1514465959000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1514465959000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1514465959000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1514465959000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1514465959000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1514465959000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1514465959000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1514465959000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1514465959000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1514465959000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1514465959000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1514465959000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1514465959000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1514465959000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1514465959000},{"_id":"source/tags/index.md","hash":"64622508336303bc387a88d93daba8bc1ed5cf0b","modified":1514815145493},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1514465959000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1514465959000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1514465959000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1514465959000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1514465959000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1514465959000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1514465959000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514465959000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514465959000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514465959000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1514465959000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514465959000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514465959000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1514465959000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1514465959000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1514465959000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1514465959000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1514465959000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1514465959000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1514465959000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1514465959000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1514465959000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1514465959000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1514465959000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1514465959000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1514465959000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1514465959000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1514465959000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1514465959000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1514465959000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1514465959000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1514465959000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1514465959000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1514465959000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1514465959000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1514465959000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1514465959000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1514465959000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1514465959000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1514465959000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1514465959000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1514465959000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1514465959000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1514465959000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1514465959000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1514465959000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1514465959000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1514465959000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1514465959000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1514465959000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1514465959000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514465959000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1514465959000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514465959000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1514465959000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1514465959000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1514465959000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1514465959000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1514465959000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1514465959000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1514465959000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1514465959000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1514465959000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1514465959000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1514465959000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1514465959000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1514465959000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1514465959000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1514465959000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514465959000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514465959000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514465959000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514465959000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514465959000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1514465959000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1514465959000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1514465959000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1514465959000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1514465959000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1514465959000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1514465959000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1514465959000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1514465959000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1514465959000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1514465959000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1514465959000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1514465959000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1514465959000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1514465959000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1514465959000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1514465959000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1514465959000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1514465959000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1514465959000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1514465959000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1514465959000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1514465959000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1514465959000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1514465959000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1514465959000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1514465959000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1514465959000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1514465959000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1514465959000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1514465959000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1514465959000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1514465959000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1514465959000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1514465959000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1514465959000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1514465959000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1514465959000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1514465959000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1514465959000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1514465959000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1514465959000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1514465959000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1514465959000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1514465959000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1514465959000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1514465959000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1514465959000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1514465959000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1514465959000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1514465959000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1514465959000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1514465959000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1514465959000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1514465959000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1514465959000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1514465959000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1514465959000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1514465959000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1514465959000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1514465959000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1514465959000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1514465959000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1514465959000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1514465959000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1514465959000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1514465959000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1514465959000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1514465959000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1514465959000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1514465959000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1514465959000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1514465959000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1514465959000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1514465959000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1514465959000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1514465959000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1514465959000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1514465959000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1514465959000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1514465959000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1514465959000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1514465959000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1514465959000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1514465959000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1514465959000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1514465959000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514465959000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514465959000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1514465959000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1514465959000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1514465959000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1514465959000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1514465959000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1514465959000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1514465959000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1514465959000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1514465959000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1514465959000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1514465959000},{"_id":"source/_posts/rsync--rsyncd配置与运行.md","hash":"731b949421456b589161ecd44f27afc4662cb0fd","modified":1514994315707},{"_id":"source/_posts/证券-财富先锋--财富先锋2017年各股池成绩单.md","hash":"98a87185460a0bb421e1b4e2d9f73c727a1fdcd0","modified":1514909264593}],"Category":[{"name":"linux","_id":"cjbz7uhp80003g5jxo99jvhj8"},{"name":"rsync","_id":"cjbz7uhpq000eg5jxpg4t67d2"},{"name":"shell","parent":"cjbz7uhp80003g5jxo99jvhj8","_id":"cjbz7uhps000hg5jxmu8v6dix"},{"name":"证券","_id":"cjbz7uhpv000lg5jxi173idpe"},{"name":"财富先锋","parent":"cjbz7uhpv000lg5jxi173idpe","_id":"cjbz7uhpx000rg5jxu5hedhb6"}],"Data":[],"Page":[{"title":"about me","date":"2016-07-05T07:21:04.000Z","_content":"\n> 好读书, 但所买之书数年犹新, 故自嘲曰非好读书而好藏书耳; 喜架构与模式, 但又觉底层不可缺, 常徘徊于两者间不得门而入;\n\n## 联系方式\n\n**微信** : &nbsp;XaaService\n\n**手机** : 18513585440\n\n**邮箱** : zshell.zhang@qunar.com  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xaaservice@gmail.com\n\n## 职业状态\n\n2016 年 6 月毕业;\n2016.7 - 至今: 去哪儿网 dev;\n","source":"about/index.md","raw":"---\ntitle: about me\ndate: 2016-07-05 15:21:04\n---\n\n> 好读书, 但所买之书数年犹新, 故自嘲曰非好读书而好藏书耳; 喜架构与模式, 但又觉底层不可缺, 常徘徊于两者间不得门而入;\n\n## 联系方式\n\n**微信** : &nbsp;XaaService\n\n**手机** : 18513585440\n\n**邮箱** : zshell.zhang@qunar.com  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xaaservice@gmail.com\n\n## 职业状态\n\n2016 年 6 月毕业;\n2016.7 - 至今: 去哪儿网 dev;\n","updated":"2018-01-01T07:26:00.530Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjbz7uhp00001g5jx8hp507yh","content":"<blockquote>\n<p>好读书, 但所买之书数年犹新, 故自嘲曰非好读书而好藏书耳; 喜架构与模式, 但又觉底层不可缺, 常徘徊于两者间不得门而入;</p>\n</blockquote>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><p><strong>微信</strong> : &nbsp;XaaService</p>\n<p><strong>手机</strong> : 18513585440</p>\n<p><strong>邮箱</strong> : zshell.zhang@qunar.com<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xaaservice@gmail.com</p>\n<h2 id=\"职业状态\"><a href=\"#职业状态\" class=\"headerlink\" title=\"职业状态\"></a>职业状态</h2><p>2016 年 6 月毕业;<br>2016.7 - 至今: 去哪儿网 dev;</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>好读书, 但所买之书数年犹新, 故自嘲曰非好读书而好藏书耳; 喜架构与模式, 但又觉底层不可缺, 常徘徊于两者间不得门而入;</p>\n</blockquote>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><p><strong>微信</strong> : &nbsp;XaaService</p>\n<p><strong>手机</strong> : 18513585440</p>\n<p><strong>邮箱</strong> : zshell.zhang@qunar.com<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xaaservice@gmail.com</p>\n<h2 id=\"职业状态\"><a href=\"#职业状态\" class=\"headerlink\" title=\"职业状态\"></a>职业状态</h2><p>2016 年 6 月毕业;<br>2016.7 - 至今: 去哪儿网 dev;</p>\n"},{"title":"categories","date":"2016-08-01T11:40:08.000Z","type":"categories","_content":"\n","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-08-01 19:40:08\ntype: \"categories\"\n---\n\n","updated":"2018-01-01T13:58:13.229Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjbz7uhzz000yg5jxe773vyjv","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2016-07-05T13:58:26.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-07-05 21:58:26\ntype: \"tags\"\n---\n","updated":"2018-01-01T13:59:05.493Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjbz7ui00000zg5jxcsod2jln","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"bash 数组与映射","date":"2017-10-22T15:32:19.000Z","_content":"\n> 注: bash 映射 (map) 在文档里叫做 `关联数组 (associated array)`, 使用关联数组的最低 bash 版本是 4.1.2;\n\n<!--more-->\n\n## **数组/关联数组 的创建**\n### **静态创建**\n使用类型限定 declare 定义:\n``` bash\n# 数组\ndeclare -a array1=('a' 'b' 'c')\ndeclare -a array2=(a b c)\n# 关联数组\ndeclare -A map1=([\"a\"]=\"aa\" [\"b\"]=\"bb\" [\"c\"]=\"cc\")\ndeclare -A map2=([a]=aa [b]=bb [c]=cc)\n```\n如果不带类型限定, bash 不会自动推断 关联数组 类型:\n``` bash\nobject1=(a b c)\nobject2=([\"a\"]=\"aa\" [\"b\"]=\"bb\" [\"c\"]=\"cc\")\n```\n对于以上两者, bash 都将推断为 普通数组 类型, 其中 object2 中有三个 string 元素: [\"a\"]=\"aa\", [\"b\"]=\"bb\" 与 [\"c\"]=\"cc\";\n\n### **动态创建**\n以上展示了 数组/动态数组 的静态创建方式;\n更复杂的场景是, 由一段其他复杂命令的输出, 赋值构建一个数组类型:\n``` bash\npair_array=(`sed -n -e '6,/}/p' -e '$d' ${formatted_curl_response_file} | awk -F ':' '{\n    log_length = length($1);\n    app_code_length = length($2);\n    log_path = substr($1, 2, log_length - 2);\n    app_code = substr($2, 2, app_code_length - 2);\n    map[log_path] = app_code\n} END {\n    for (key in map) {\n        printf (\"%10s=%10s \", key, map[key])\n    }\n}'`)\n```\n以上逻辑, 由 sed 与 awk 两重管道输出目标内容, 作为创建数组的参数, 以达到动态创建的目的;\n但是, 以上方式只适用于创建 数组, 而不适用于创建 关联数组, 原因与上一节 静态创建数组 中所表述的相同: 即使输出格式符合定义规范, bash 并不会自动推断为 关联数组;\n&nbsp;\n另外, 企图通过 declare 强制限定类型去动态创建, 也是不合法的:\n``` bash\n> declare -A map=(`last -n 1 | head -n 1 | awk '{map[$1]=$3} END{for (key in map) {printf (\"[%10s]=%10s \", key, map[key])}}'`)\n# 以上语句会报如下错误:\n-bash: map: [: must use subscript when assigning associative array\n-bash: map: zshell.z]=113.44.125.146: must use subscript when assigning associative array\n```\n因为, 通过 ``, $() 等命令代换, [zshell.z]=113.44.125.146 这样的输出内容被当作命令执行, 而 [ 这是一个 bash 的内置命令, 用于条件判断;\n显然 zshell.z]=113.44.125.146 这样的语句是不符合条件判断的参数输入的;\n\n## **数组/关联数组 的使用**\n单独赋值:\n``` bash\nmap['a']='aaa'\narray[0]=aaa\n```\n获取数据:\n``` bash\n# 获得所有 values\necho ${map[@]}\necho ${array[@]}\n# 获得某个单独的值\nvar=${map['a']}\nvar=${array[0]}\n# 获得所有 keys (对于数组而言, 就是获得所有的索引下标)\nfor key in ${!map[@]}; do\n    ...\ndone\nfor key in ${!array[@]}; do\n    ...\ndone\n```\n\n## **参考链接**\n- [shell中的map使用](http://blog.csdn.net/adermxl/article/details/41145019)\n\n","source":"_posts/linux-shell--bash数组与映射.md","raw":"---\ntitle: bash 数组与映射\ndate: 2017-10-22 23:32:19\ncategories:\n  - linux\n  - shell\ntags:\n  - linux:shell\n---\n\n> 注: bash 映射 (map) 在文档里叫做 `关联数组 (associated array)`, 使用关联数组的最低 bash 版本是 4.1.2;\n\n<!--more-->\n\n## **数组/关联数组 的创建**\n### **静态创建**\n使用类型限定 declare 定义:\n``` bash\n# 数组\ndeclare -a array1=('a' 'b' 'c')\ndeclare -a array2=(a b c)\n# 关联数组\ndeclare -A map1=([\"a\"]=\"aa\" [\"b\"]=\"bb\" [\"c\"]=\"cc\")\ndeclare -A map2=([a]=aa [b]=bb [c]=cc)\n```\n如果不带类型限定, bash 不会自动推断 关联数组 类型:\n``` bash\nobject1=(a b c)\nobject2=([\"a\"]=\"aa\" [\"b\"]=\"bb\" [\"c\"]=\"cc\")\n```\n对于以上两者, bash 都将推断为 普通数组 类型, 其中 object2 中有三个 string 元素: [\"a\"]=\"aa\", [\"b\"]=\"bb\" 与 [\"c\"]=\"cc\";\n\n### **动态创建**\n以上展示了 数组/动态数组 的静态创建方式;\n更复杂的场景是, 由一段其他复杂命令的输出, 赋值构建一个数组类型:\n``` bash\npair_array=(`sed -n -e '6,/}/p' -e '$d' ${formatted_curl_response_file} | awk -F ':' '{\n    log_length = length($1);\n    app_code_length = length($2);\n    log_path = substr($1, 2, log_length - 2);\n    app_code = substr($2, 2, app_code_length - 2);\n    map[log_path] = app_code\n} END {\n    for (key in map) {\n        printf (\"%10s=%10s \", key, map[key])\n    }\n}'`)\n```\n以上逻辑, 由 sed 与 awk 两重管道输出目标内容, 作为创建数组的参数, 以达到动态创建的目的;\n但是, 以上方式只适用于创建 数组, 而不适用于创建 关联数组, 原因与上一节 静态创建数组 中所表述的相同: 即使输出格式符合定义规范, bash 并不会自动推断为 关联数组;\n&nbsp;\n另外, 企图通过 declare 强制限定类型去动态创建, 也是不合法的:\n``` bash\n> declare -A map=(`last -n 1 | head -n 1 | awk '{map[$1]=$3} END{for (key in map) {printf (\"[%10s]=%10s \", key, map[key])}}'`)\n# 以上语句会报如下错误:\n-bash: map: [: must use subscript when assigning associative array\n-bash: map: zshell.z]=113.44.125.146: must use subscript when assigning associative array\n```\n因为, 通过 ``, $() 等命令代换, [zshell.z]=113.44.125.146 这样的输出内容被当作命令执行, 而 [ 这是一个 bash 的内置命令, 用于条件判断;\n显然 zshell.z]=113.44.125.146 这样的语句是不符合条件判断的参数输入的;\n\n## **数组/关联数组 的使用**\n单独赋值:\n``` bash\nmap['a']='aaa'\narray[0]=aaa\n```\n获取数据:\n``` bash\n# 获得所有 values\necho ${map[@]}\necho ${array[@]}\n# 获得某个单独的值\nvar=${map['a']}\nvar=${array[0]}\n# 获得所有 keys (对于数组而言, 就是获得所有的索引下标)\nfor key in ${!map[@]}; do\n    ...\ndone\nfor key in ${!array[@]}; do\n    ...\ndone\n```\n\n## **参考链接**\n- [shell中的map使用](http://blog.csdn.net/adermxl/article/details/41145019)\n\n","slug":"linux-shell--bash数组与映射","published":1,"updated":"2018-01-03T15:18:11.226Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz7uhor0000g5jxdw7uyhdt","content":"<blockquote>\n<p>注: bash 映射 (map) 在文档里叫做 <code>关联数组 (associated array)</code>, 使用关联数组的最低 bash 版本是 4.1.2;</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"数组-关联数组-的创建\"><a href=\"#数组-关联数组-的创建\" class=\"headerlink\" title=\"数组/关联数组 的创建\"></a><strong>数组/关联数组 的创建</strong></h2><h3 id=\"静态创建\"><a href=\"#静态创建\" class=\"headerlink\" title=\"静态创建\"></a><strong>静态创建</strong></h3><p>使用类型限定 declare 定义:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数组</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -a array1=(<span class=\"string\">'a'</span> <span class=\"string\">'b'</span> <span class=\"string\">'c'</span>)</span><br><span class=\"line\"><span class=\"built_in\">declare</span> -a array2=(a b c)</span><br><span class=\"line\"><span class=\"comment\"># 关联数组</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -A map1=([<span class=\"string\">\"a\"</span>]=<span class=\"string\">\"aa\"</span> [<span class=\"string\">\"b\"</span>]=<span class=\"string\">\"bb\"</span> [<span class=\"string\">\"c\"</span>]=<span class=\"string\">\"cc\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">declare</span> -A map2=([a]=aa [b]=bb [c]=cc)</span><br></pre></td></tr></table></figure></p>\n<p>如果不带类型限定, bash 不会自动推断 关联数组 类型:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object1=(a b c)</span><br><span class=\"line\">object2=([<span class=\"string\">\"a\"</span>]=<span class=\"string\">\"aa\"</span> [<span class=\"string\">\"b\"</span>]=<span class=\"string\">\"bb\"</span> [<span class=\"string\">\"c\"</span>]=<span class=\"string\">\"cc\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p>对于以上两者, bash 都将推断为 普通数组 类型, 其中 object2 中有三个 string 元素: [“a”]=”aa”, [“b”]=”bb” 与 [“c”]=”cc”;</p>\n<h3 id=\"动态创建\"><a href=\"#动态创建\" class=\"headerlink\" title=\"动态创建\"></a><strong>动态创建</strong></h3><p>以上展示了 数组/动态数组 的静态创建方式;<br>更复杂的场景是, 由一段其他复杂命令的输出, 赋值构建一个数组类型:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pair_array=(`sed -n -e <span class=\"string\">'6,/&#125;/p'</span> -e <span class=\"string\">'$d'</span> <span class=\"variable\">$&#123;formatted_curl_response_file&#125;</span> | awk -F <span class=\"string\">':'</span> <span class=\"string\">'&#123;</span></span><br><span class=\"line\"><span class=\"string\">    log_length = length($1);</span></span><br><span class=\"line\"><span class=\"string\">    app_code_length = length($2);</span></span><br><span class=\"line\"><span class=\"string\">    log_path = substr($1, 2, log_length - 2);</span></span><br><span class=\"line\"><span class=\"string\">    app_code = substr($2, 2, app_code_length - 2);</span></span><br><span class=\"line\"><span class=\"string\">    map[log_path] = app_code</span></span><br><span class=\"line\"><span class=\"string\">&#125; END &#123;</span></span><br><span class=\"line\"><span class=\"string\">    for (key in map) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        printf (\"%10s=%10s \", key, map[key])</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;'</span>`)</span><br></pre></td></tr></table></figure></p>\n<p>以上逻辑, 由 sed 与 awk 两重管道输出目标内容, 作为创建数组的参数, 以达到动态创建的目的;<br>但是, 以上方式只适用于创建 数组, 而不适用于创建 关联数组, 原因与上一节 静态创建数组 中所表述的相同: 即使输出格式符合定义规范, bash 并不会自动推断为 关联数组;<br>&nbsp;<br>另外, 企图通过 declare 强制限定类型去动态创建, 也是不合法的:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"built_in\">declare</span> -A map=(`last -n 1 | head -n 1 | awk <span class=\"string\">'&#123;map[$1]=$3&#125; END&#123;for (key in map) &#123;printf (\"[%10s]=%10s \", key, map[key])&#125;&#125;'</span>`)</span><br><span class=\"line\"><span class=\"comment\"># 以上语句会报如下错误:</span></span><br><span class=\"line\">-bash: map: [: must use subscript when assigning associative array</span><br><span class=\"line\">-bash: map: zshell.z]=113.44.125.146: must use subscript when assigning associative array</span><br></pre></td></tr></table></figure></p>\n<p>因为, 通过 ``, $() 等命令代换, [zshell.z]=113.44.125.146 这样的输出内容被当作命令执行, 而 [ 这是一个 bash 的内置命令, 用于条件判断;<br>显然 zshell.z]=113.44.125.146 这样的语句是不符合条件判断的参数输入的;</p>\n<h2 id=\"数组-关联数组-的使用\"><a href=\"#数组-关联数组-的使用\" class=\"headerlink\" title=\"数组/关联数组 的使用\"></a><strong>数组/关联数组 的使用</strong></h2><p>单独赋值:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">map[<span class=\"string\">'a'</span>]=<span class=\"string\">'aaa'</span></span><br><span class=\"line\">array[0]=aaa</span><br></pre></td></tr></table></figure></p>\n<p>获取数据:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获得所有 values</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;map[@]&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;array[@]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 获得某个单独的值</span></span><br><span class=\"line\">var=<span class=\"variable\">$&#123;map['a']&#125;</span></span><br><span class=\"line\">var=<span class=\"variable\">$&#123;array[0]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 获得所有 keys (对于数组而言, 就是获得所有的索引下标)</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;!map[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;!array[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a><strong>参考链接</strong></h2><ul>\n<li><a href=\"http://blog.csdn.net/adermxl/article/details/41145019\" target=\"_blank\" rel=\"noopener\">shell中的map使用</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>注: bash 映射 (map) 在文档里叫做 <code>关联数组 (associated array)</code>, 使用关联数组的最低 bash 版本是 4.1.2;</p>\n</blockquote>","more":"<h2 id=\"数组-关联数组-的创建\"><a href=\"#数组-关联数组-的创建\" class=\"headerlink\" title=\"数组/关联数组 的创建\"></a><strong>数组/关联数组 的创建</strong></h2><h3 id=\"静态创建\"><a href=\"#静态创建\" class=\"headerlink\" title=\"静态创建\"></a><strong>静态创建</strong></h3><p>使用类型限定 declare 定义:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数组</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -a array1=(<span class=\"string\">'a'</span> <span class=\"string\">'b'</span> <span class=\"string\">'c'</span>)</span><br><span class=\"line\"><span class=\"built_in\">declare</span> -a array2=(a b c)</span><br><span class=\"line\"><span class=\"comment\"># 关联数组</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -A map1=([<span class=\"string\">\"a\"</span>]=<span class=\"string\">\"aa\"</span> [<span class=\"string\">\"b\"</span>]=<span class=\"string\">\"bb\"</span> [<span class=\"string\">\"c\"</span>]=<span class=\"string\">\"cc\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">declare</span> -A map2=([a]=aa [b]=bb [c]=cc)</span><br></pre></td></tr></table></figure></p>\n<p>如果不带类型限定, bash 不会自动推断 关联数组 类型:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object1=(a b c)</span><br><span class=\"line\">object2=([<span class=\"string\">\"a\"</span>]=<span class=\"string\">\"aa\"</span> [<span class=\"string\">\"b\"</span>]=<span class=\"string\">\"bb\"</span> [<span class=\"string\">\"c\"</span>]=<span class=\"string\">\"cc\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p>对于以上两者, bash 都将推断为 普通数组 类型, 其中 object2 中有三个 string 元素: [“a”]=”aa”, [“b”]=”bb” 与 [“c”]=”cc”;</p>\n<h3 id=\"动态创建\"><a href=\"#动态创建\" class=\"headerlink\" title=\"动态创建\"></a><strong>动态创建</strong></h3><p>以上展示了 数组/动态数组 的静态创建方式;<br>更复杂的场景是, 由一段其他复杂命令的输出, 赋值构建一个数组类型:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pair_array=(`sed -n -e <span class=\"string\">'6,/&#125;/p'</span> -e <span class=\"string\">'$d'</span> <span class=\"variable\">$&#123;formatted_curl_response_file&#125;</span> | awk -F <span class=\"string\">':'</span> <span class=\"string\">'&#123;</span></span><br><span class=\"line\"><span class=\"string\">    log_length = length($1);</span></span><br><span class=\"line\"><span class=\"string\">    app_code_length = length($2);</span></span><br><span class=\"line\"><span class=\"string\">    log_path = substr($1, 2, log_length - 2);</span></span><br><span class=\"line\"><span class=\"string\">    app_code = substr($2, 2, app_code_length - 2);</span></span><br><span class=\"line\"><span class=\"string\">    map[log_path] = app_code</span></span><br><span class=\"line\"><span class=\"string\">&#125; END &#123;</span></span><br><span class=\"line\"><span class=\"string\">    for (key in map) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        printf (\"%10s=%10s \", key, map[key])</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;'</span>`)</span><br></pre></td></tr></table></figure></p>\n<p>以上逻辑, 由 sed 与 awk 两重管道输出目标内容, 作为创建数组的参数, 以达到动态创建的目的;<br>但是, 以上方式只适用于创建 数组, 而不适用于创建 关联数组, 原因与上一节 静态创建数组 中所表述的相同: 即使输出格式符合定义规范, bash 并不会自动推断为 关联数组;<br>&nbsp;<br>另外, 企图通过 declare 强制限定类型去动态创建, 也是不合法的:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"built_in\">declare</span> -A map=(`last -n 1 | head -n 1 | awk <span class=\"string\">'&#123;map[$1]=$3&#125; END&#123;for (key in map) &#123;printf (\"[%10s]=%10s \", key, map[key])&#125;&#125;'</span>`)</span><br><span class=\"line\"><span class=\"comment\"># 以上语句会报如下错误:</span></span><br><span class=\"line\">-bash: map: [: must use subscript when assigning associative array</span><br><span class=\"line\">-bash: map: zshell.z]=113.44.125.146: must use subscript when assigning associative array</span><br></pre></td></tr></table></figure></p>\n<p>因为, 通过 ``, $() 等命令代换, [zshell.z]=113.44.125.146 这样的输出内容被当作命令执行, 而 [ 这是一个 bash 的内置命令, 用于条件判断;<br>显然 zshell.z]=113.44.125.146 这样的语句是不符合条件判断的参数输入的;</p>\n<h2 id=\"数组-关联数组-的使用\"><a href=\"#数组-关联数组-的使用\" class=\"headerlink\" title=\"数组/关联数组 的使用\"></a><strong>数组/关联数组 的使用</strong></h2><p>单独赋值:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">map[<span class=\"string\">'a'</span>]=<span class=\"string\">'aaa'</span></span><br><span class=\"line\">array[0]=aaa</span><br></pre></td></tr></table></figure></p>\n<p>获取数据:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获得所有 values</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;map[@]&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;array[@]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 获得某个单独的值</span></span><br><span class=\"line\">var=<span class=\"variable\">$&#123;map['a']&#125;</span></span><br><span class=\"line\">var=<span class=\"variable\">$&#123;array[0]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 获得所有 keys (对于数组而言, 就是获得所有的索引下标)</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;!map[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;!array[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a><strong>参考链接</strong></h2><ul>\n<li><a href=\"http://blog.csdn.net/adermxl/article/details/41145019\" target=\"_blank\" rel=\"noopener\">shell中的map使用</a></li>\n</ul>"},{"title":"bash 条件判断全梳理","date":"2016-09-01T09:52:36.000Z","_content":"\n> 本文基于 GNU bash, version 4.1.2(1)-release (x86_64-redhat-linux-gnu)\n\n<!--more-->\n\n## **bash 条件判断 的类型与逻辑运算符**\n\n### **字符串比较**\n1. `=`同`==`, 相同为真;\n2. `!=`, 不相同为真;\n3. `-z`, 长度为0(空)为真;\n4. `-n`, 长度不为0(非空)为真;\n5. `<`, 按字典序小于为真;\n6. `>`, 按字典序大于为真;\n\n### **整数比较**\n1. `-eq`, equals, 相等为真;\n2. `-ne`, not equals, 不相等为真;\n3. `-gt`, greater than, 大于为真;\n4. `-ge`, greater equals, 大于等于为真;\n5. `-lt`, less than, 小于为真;\n6. `-le`, less equals, 小于等于为真;\n7. `>`, 大于;\n8. `>=`, 大于等于;\n9. `<`, 小于;\n10. `<=`, 小于等于;\n11. `==`, 等于;\n12. `!=`, 不等于;\n\n### **文件比较**\n1. `-e`, exists, 文件存在为真\n2. `-r`, read, 用户可读为真 \n3. `-w`, write, 用户可写为真 \n4. `-x`, execute, 用户可执行为真 \n5. `-f`, file, 文件为正规文件为真 \n6. `-d`, directory, 文件为目录为真\n7. `-L`, link, 文件为链接文件为真\n8. `-c`, char, 文件为字符特殊文件为真 \n9. `-b`, block, 文件为块特殊文件为真 \n10. `-s`, 文件大小非0时为真 \n11. `-t`, 当文件描述符(默认为1)指定的设备为终端时为真\n12. `-nt`, newer than, 更新时间更晚为真;\n13. `-ot`, older than, 更新时间更早为真;\n\n### **逻辑比较**\n1. `-a`, and, 逻辑与;\n2. `-o`, or, 逻辑或;\n3. `!`, 逻辑非;\n4. `&&`, 逻辑与( 支持短路 );\n5. `||`, 逻辑或( 支持短路 );\n\n&nbsp;\n## **bash 条件判断 的命令(关键字)与语法**\n\n### **test 与 [ ]**\n`test` 与 `[` 是 shell 的内置命令;\n`test` 和 `[]` 可以用于比较字符串, 整数, 文件, `test expr `与`[ expr ]`有等价的效果;\n\n#### **字符串比较**\n`test`可以使用`=`, `==`, `!=`比较, bash 4.1版本下也能使用`-n`, `-z`比较字符串( 旧版本可能不支持该方式 );\n`[]`可以使用上述全部的比较符号;\n```\nif !test $str1 == $str2; then ... ; fi\nif ! [ $str1 == $str2 ]; then ... ; fi\n```\n`test` 与 `[]` 也可以使用 `<` 和 `>` 作字符串比较; 但是有一点要注意, `test`和`[`是 shell 的内置命令, 使用 `<` 和 `>` 需要转义, 否则会被当成重定向; \n#### **整数比较**\n`test`和`[]`均可以使用`-eq`, `-gt`, `-ge`, `-lt`, `-le`, `-ne` 作整数比较, 但不能使用 `>`, `>=`, `<`, `<=`,`==`,`!=` 等比较运算符;\n使用`<`,`>`,`==`,`!=`虽然语法不会报错, 但是会被当成字符串以字典序比较, 不能确保结果的正确性;\n```\nif test $1 -le 0; then ... ; fi\nif [ $1 -le 0 ]; then ... ; fi\n```\n#### **文件比较**\n`test`和`[]`均可以使用`-e`, `-r`, `-w`, `-x`等文件比较逻辑;\n```\nif test -e /usr/local/localtime; then ... ; fi\nif [ -e /usr/local/localtime ]; then ... ; fi\n```\n#### **逻辑比较**\n`test`和`[]`只能使用`-a`, `-o`和`!`运算符, 但`-a`和`-o` 不支持逻辑短路;\n```\nif !test $str1 == $str2 -a -n $str3; then ... ; fi\nif [ $str1 == $str2 -a -n $str3 ]; then ... ; fi\n```\n#### **test的返回值**\n`test`可以独立于`if`使用, 其执行结果( 0为真, 1为假 )可以使用`$?`来接收;\n```\ntest -z \"$1\"; echo \"$?\"\n```\n\n### **bash关键字 [[ ]] ( 推荐使用 )**\n`[[` 是 bash 的关键字, 而不是命令;\n`[[ ]]` 比 `[]` 更通用, 更安全, 功能更强大; 在生产环境中, 推荐使用 `[[ ]]`;\n\n#### **字符串比较**\n`[[ ]]` 除了可以使用基本的 `=`, `==`, `!=`, `-n`, `-z` 之外, 其 `=`,`==` 和 `!=`还有通配符模式匹配的功能:\n```\n# 模式串不能加双引号, 否则会被当作普通串\nif [[ \"test\" == t* ]]; then ... ; fi\n```\n`[[ ]]` 还可以使用支持正则表达式的 `=~` 运算符:\n```\n# 模式串不能加双引号, 否则会被当作普通串\nif [[ \"test\" =~ ^t[a-z].t$ ]]; then ... ; fi\n```\n`[[ ]]`也可以使用`<`和`>`作字符串比较; 由于`[[`是bash内置的关键字, `<`和`>`并不会被当成重定向, 所以可以不需要转义;\n#### **整数比较**\n和`test`, `[]`一样, `[[ ]]`可以使用`-eq`, `-gt`, `-ge`, `-lt`, `-le`, `-ne` 作整数比较, 但不能使用 `>`, `>=`, `<`, `<=`,`==`,`!=` 等比较运算符; 不能使用的原因也是一样的(当成字符串来处理了);\n#### **算术拓展**\n`[[]]`支持算术拓展, 但是其对整数比较支持度较差, 算术拓展可能是一个鸡肋功能, 而且运算符与运算数之间不能有空格:\n```\nif [[ 1+1 -eq 2 ]]; then ... ; fi\n```\n此功能不推荐使用;\n#### **文件比较**\n和`test`, `[]`一样, `[[ ]]`可以使用`-e`, `-r`, `-w`, `-x`等文件比较逻辑;\n#### **逻辑比较**\n`[[ ]]`只能使用`&&`, `||`, `!`运算符, 且`&&`和`||`支持逻辑短路;\n\n### **(( ))的使用场景**\n无论是`test`, `[]`还是`[[ ]]`, 都不能很好地使用`<`和`>`处理整数的比较运算;\n所以通常使用`(())`来处理整数的比较运算;\n`(())`可以使用`>`, `>=`, `<`, `<=`,`==`,`!=`运算符;\n```\nif (( 1 + 1 == 2 )); then ... ; fi\n```\n使用`(())`的时候, 如果使用到了变量, 可以不需要加上`$`符号;\n\n&nbsp;\n## **总结**\n\n|-           | test 与 [ ]                                           | [[ ]]                                               | (( ))                 |\n|:----------:|:----------------------------------------------------:|:----------------------------------------------------:|:---------------------:|\n| 字符串比较 | =, ==, !=, -n, -z, \\\\<, \\\\>                          | =, ==, !=, -n, -z, <, >                              | 不支持                |\n| 整数比较   | -eq, -gt, -ge, -lt, -le, -ne                         | -eq, -gt, -ge, -lt, -le, -ne                         | \\>, >=, <, <=, ==, != |\n| 文件比较   | -e, -r, -w, -x, -f, -d, -L, -s, -b, -c, -t, -nt, -ot | -e, -r, -w, -x, -f, -d, -L, -s, -b, -c, -t, -nt, -ot | 不支持                |\n| 逻辑比较   | -a, -o, !                                            | &&, \\|\\|, !                                          | &&, \\|\\|, !           |\n\n&nbsp;\n## **参考链接**\n","source":"_posts/linux-shell--bash条件判断全梳理.md","raw":"---\ntitle: bash 条件判断全梳理\ndate: 2016-09-01 17:52:36\ntags: \n  - linux:shell\ncategories:\n  - linux\n  - shell\n---\n\n> 本文基于 GNU bash, version 4.1.2(1)-release (x86_64-redhat-linux-gnu)\n\n<!--more-->\n\n## **bash 条件判断 的类型与逻辑运算符**\n\n### **字符串比较**\n1. `=`同`==`, 相同为真;\n2. `!=`, 不相同为真;\n3. `-z`, 长度为0(空)为真;\n4. `-n`, 长度不为0(非空)为真;\n5. `<`, 按字典序小于为真;\n6. `>`, 按字典序大于为真;\n\n### **整数比较**\n1. `-eq`, equals, 相等为真;\n2. `-ne`, not equals, 不相等为真;\n3. `-gt`, greater than, 大于为真;\n4. `-ge`, greater equals, 大于等于为真;\n5. `-lt`, less than, 小于为真;\n6. `-le`, less equals, 小于等于为真;\n7. `>`, 大于;\n8. `>=`, 大于等于;\n9. `<`, 小于;\n10. `<=`, 小于等于;\n11. `==`, 等于;\n12. `!=`, 不等于;\n\n### **文件比较**\n1. `-e`, exists, 文件存在为真\n2. `-r`, read, 用户可读为真 \n3. `-w`, write, 用户可写为真 \n4. `-x`, execute, 用户可执行为真 \n5. `-f`, file, 文件为正规文件为真 \n6. `-d`, directory, 文件为目录为真\n7. `-L`, link, 文件为链接文件为真\n8. `-c`, char, 文件为字符特殊文件为真 \n9. `-b`, block, 文件为块特殊文件为真 \n10. `-s`, 文件大小非0时为真 \n11. `-t`, 当文件描述符(默认为1)指定的设备为终端时为真\n12. `-nt`, newer than, 更新时间更晚为真;\n13. `-ot`, older than, 更新时间更早为真;\n\n### **逻辑比较**\n1. `-a`, and, 逻辑与;\n2. `-o`, or, 逻辑或;\n3. `!`, 逻辑非;\n4. `&&`, 逻辑与( 支持短路 );\n5. `||`, 逻辑或( 支持短路 );\n\n&nbsp;\n## **bash 条件判断 的命令(关键字)与语法**\n\n### **test 与 [ ]**\n`test` 与 `[` 是 shell 的内置命令;\n`test` 和 `[]` 可以用于比较字符串, 整数, 文件, `test expr `与`[ expr ]`有等价的效果;\n\n#### **字符串比较**\n`test`可以使用`=`, `==`, `!=`比较, bash 4.1版本下也能使用`-n`, `-z`比较字符串( 旧版本可能不支持该方式 );\n`[]`可以使用上述全部的比较符号;\n```\nif !test $str1 == $str2; then ... ; fi\nif ! [ $str1 == $str2 ]; then ... ; fi\n```\n`test` 与 `[]` 也可以使用 `<` 和 `>` 作字符串比较; 但是有一点要注意, `test`和`[`是 shell 的内置命令, 使用 `<` 和 `>` 需要转义, 否则会被当成重定向; \n#### **整数比较**\n`test`和`[]`均可以使用`-eq`, `-gt`, `-ge`, `-lt`, `-le`, `-ne` 作整数比较, 但不能使用 `>`, `>=`, `<`, `<=`,`==`,`!=` 等比较运算符;\n使用`<`,`>`,`==`,`!=`虽然语法不会报错, 但是会被当成字符串以字典序比较, 不能确保结果的正确性;\n```\nif test $1 -le 0; then ... ; fi\nif [ $1 -le 0 ]; then ... ; fi\n```\n#### **文件比较**\n`test`和`[]`均可以使用`-e`, `-r`, `-w`, `-x`等文件比较逻辑;\n```\nif test -e /usr/local/localtime; then ... ; fi\nif [ -e /usr/local/localtime ]; then ... ; fi\n```\n#### **逻辑比较**\n`test`和`[]`只能使用`-a`, `-o`和`!`运算符, 但`-a`和`-o` 不支持逻辑短路;\n```\nif !test $str1 == $str2 -a -n $str3; then ... ; fi\nif [ $str1 == $str2 -a -n $str3 ]; then ... ; fi\n```\n#### **test的返回值**\n`test`可以独立于`if`使用, 其执行结果( 0为真, 1为假 )可以使用`$?`来接收;\n```\ntest -z \"$1\"; echo \"$?\"\n```\n\n### **bash关键字 [[ ]] ( 推荐使用 )**\n`[[` 是 bash 的关键字, 而不是命令;\n`[[ ]]` 比 `[]` 更通用, 更安全, 功能更强大; 在生产环境中, 推荐使用 `[[ ]]`;\n\n#### **字符串比较**\n`[[ ]]` 除了可以使用基本的 `=`, `==`, `!=`, `-n`, `-z` 之外, 其 `=`,`==` 和 `!=`还有通配符模式匹配的功能:\n```\n# 模式串不能加双引号, 否则会被当作普通串\nif [[ \"test\" == t* ]]; then ... ; fi\n```\n`[[ ]]` 还可以使用支持正则表达式的 `=~` 运算符:\n```\n# 模式串不能加双引号, 否则会被当作普通串\nif [[ \"test\" =~ ^t[a-z].t$ ]]; then ... ; fi\n```\n`[[ ]]`也可以使用`<`和`>`作字符串比较; 由于`[[`是bash内置的关键字, `<`和`>`并不会被当成重定向, 所以可以不需要转义;\n#### **整数比较**\n和`test`, `[]`一样, `[[ ]]`可以使用`-eq`, `-gt`, `-ge`, `-lt`, `-le`, `-ne` 作整数比较, 但不能使用 `>`, `>=`, `<`, `<=`,`==`,`!=` 等比较运算符; 不能使用的原因也是一样的(当成字符串来处理了);\n#### **算术拓展**\n`[[]]`支持算术拓展, 但是其对整数比较支持度较差, 算术拓展可能是一个鸡肋功能, 而且运算符与运算数之间不能有空格:\n```\nif [[ 1+1 -eq 2 ]]; then ... ; fi\n```\n此功能不推荐使用;\n#### **文件比较**\n和`test`, `[]`一样, `[[ ]]`可以使用`-e`, `-r`, `-w`, `-x`等文件比较逻辑;\n#### **逻辑比较**\n`[[ ]]`只能使用`&&`, `||`, `!`运算符, 且`&&`和`||`支持逻辑短路;\n\n### **(( ))的使用场景**\n无论是`test`, `[]`还是`[[ ]]`, 都不能很好地使用`<`和`>`处理整数的比较运算;\n所以通常使用`(())`来处理整数的比较运算;\n`(())`可以使用`>`, `>=`, `<`, `<=`,`==`,`!=`运算符;\n```\nif (( 1 + 1 == 2 )); then ... ; fi\n```\n使用`(())`的时候, 如果使用到了变量, 可以不需要加上`$`符号;\n\n&nbsp;\n## **总结**\n\n|-           | test 与 [ ]                                           | [[ ]]                                               | (( ))                 |\n|:----------:|:----------------------------------------------------:|:----------------------------------------------------:|:---------------------:|\n| 字符串比较 | =, ==, !=, -n, -z, \\\\<, \\\\>                          | =, ==, !=, -n, -z, <, >                              | 不支持                |\n| 整数比较   | -eq, -gt, -ge, -lt, -le, -ne                         | -eq, -gt, -ge, -lt, -le, -ne                         | \\>, >=, <, <=, ==, != |\n| 文件比较   | -e, -r, -w, -x, -f, -d, -L, -s, -b, -c, -t, -nt, -ot | -e, -r, -w, -x, -f, -d, -L, -s, -b, -c, -t, -nt, -ot | 不支持                |\n| 逻辑比较   | -a, -o, !                                            | &&, \\|\\|, !                                          | &&, \\|\\|, !           |\n\n&nbsp;\n## **参考链接**\n","slug":"linux-shell--bash条件判断全梳理","published":1,"updated":"2018-01-02T15:40:57.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz7uhp30002g5jxntc53r14","content":"<blockquote>\n<p>本文基于 GNU bash, version 4.1.2(1)-release (x86_64-redhat-linux-gnu)</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"bash-条件判断-的类型与逻辑运算符\"><a href=\"#bash-条件判断-的类型与逻辑运算符\" class=\"headerlink\" title=\"bash 条件判断 的类型与逻辑运算符\"></a><strong>bash 条件判断 的类型与逻辑运算符</strong></h2><h3 id=\"字符串比较\"><a href=\"#字符串比较\" class=\"headerlink\" title=\"字符串比较\"></a><strong>字符串比较</strong></h3><ol>\n<li><code>=</code>同<code>==</code>, 相同为真;</li>\n<li><code>!=</code>, 不相同为真;</li>\n<li><code>-z</code>, 长度为0(空)为真;</li>\n<li><code>-n</code>, 长度不为0(非空)为真;</li>\n<li><code>&lt;</code>, 按字典序小于为真;</li>\n<li><code>&gt;</code>, 按字典序大于为真;</li>\n</ol>\n<h3 id=\"整数比较\"><a href=\"#整数比较\" class=\"headerlink\" title=\"整数比较\"></a><strong>整数比较</strong></h3><ol>\n<li><code>-eq</code>, equals, 相等为真;</li>\n<li><code>-ne</code>, not equals, 不相等为真;</li>\n<li><code>-gt</code>, greater than, 大于为真;</li>\n<li><code>-ge</code>, greater equals, 大于等于为真;</li>\n<li><code>-lt</code>, less than, 小于为真;</li>\n<li><code>-le</code>, less equals, 小于等于为真;</li>\n<li><code>&gt;</code>, 大于;</li>\n<li><code>&gt;=</code>, 大于等于;</li>\n<li><code>&lt;</code>, 小于;</li>\n<li><code>&lt;=</code>, 小于等于;</li>\n<li><code>==</code>, 等于;</li>\n<li><code>!=</code>, 不等于;</li>\n</ol>\n<h3 id=\"文件比较\"><a href=\"#文件比较\" class=\"headerlink\" title=\"文件比较\"></a><strong>文件比较</strong></h3><ol>\n<li><code>-e</code>, exists, 文件存在为真</li>\n<li><code>-r</code>, read, 用户可读为真 </li>\n<li><code>-w</code>, write, 用户可写为真 </li>\n<li><code>-x</code>, execute, 用户可执行为真 </li>\n<li><code>-f</code>, file, 文件为正规文件为真 </li>\n<li><code>-d</code>, directory, 文件为目录为真</li>\n<li><code>-L</code>, link, 文件为链接文件为真</li>\n<li><code>-c</code>, char, 文件为字符特殊文件为真 </li>\n<li><code>-b</code>, block, 文件为块特殊文件为真 </li>\n<li><code>-s</code>, 文件大小非0时为真 </li>\n<li><code>-t</code>, 当文件描述符(默认为1)指定的设备为终端时为真</li>\n<li><code>-nt</code>, newer than, 更新时间更晚为真;</li>\n<li><code>-ot</code>, older than, 更新时间更早为真;</li>\n</ol>\n<h3 id=\"逻辑比较\"><a href=\"#逻辑比较\" class=\"headerlink\" title=\"逻辑比较\"></a><strong>逻辑比较</strong></h3><ol>\n<li><code>-a</code>, and, 逻辑与;</li>\n<li><code>-o</code>, or, 逻辑或;</li>\n<li><code>!</code>, 逻辑非;</li>\n<li><code>&amp;&amp;</code>, 逻辑与( 支持短路 );</li>\n<li><code>||</code>, 逻辑或( 支持短路 );</li>\n</ol>\n<p>&nbsp;</p>\n<h2 id=\"bash-条件判断-的命令-关键字-与语法\"><a href=\"#bash-条件判断-的命令-关键字-与语法\" class=\"headerlink\" title=\"bash 条件判断 的命令(关键字)与语法\"></a><strong>bash 条件判断 的命令(关键字)与语法</strong></h2><h3 id=\"test-与\"><a href=\"#test-与\" class=\"headerlink\" title=\"test 与 [ ]\"></a><strong>test 与 [ ]</strong></h3><p><code>test</code> 与 <code>[</code> 是 shell 的内置命令;<br><code>test</code> 和 <code>[]</code> 可以用于比较字符串, 整数, 文件, <code>test expr</code>与<code>[ expr ]</code>有等价的效果;</p>\n<h4 id=\"字符串比较-1\"><a href=\"#字符串比较-1\" class=\"headerlink\" title=\"字符串比较\"></a><strong>字符串比较</strong></h4><p><code>test</code>可以使用<code>=</code>, <code>==</code>, <code>!=</code>比较, bash 4.1版本下也能使用<code>-n</code>, <code>-z</code>比较字符串( 旧版本可能不支持该方式 );<br><code>[]</code>可以使用上述全部的比较符号;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if !test $str1 == $str2; then ... ; fi</span><br><span class=\"line\">if ! [ $str1 == $str2 ]; then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<p><code>test</code> 与 <code>[]</code> 也可以使用 <code>&lt;</code> 和 <code>&gt;</code> 作字符串比较; 但是有一点要注意, <code>test</code>和<code>[</code>是 shell 的内置命令, 使用 <code>&lt;</code> 和 <code>&gt;</code> 需要转义, 否则会被当成重定向; </p>\n<h4 id=\"整数比较-1\"><a href=\"#整数比较-1\" class=\"headerlink\" title=\"整数比较\"></a><strong>整数比较</strong></h4><p><code>test</code>和<code>[]</code>均可以使用<code>-eq</code>, <code>-gt</code>, <code>-ge</code>, <code>-lt</code>, <code>-le</code>, <code>-ne</code> 作整数比较, 但不能使用 <code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code>,<code>==</code>,<code>!=</code> 等比较运算符;<br>使用<code>&lt;</code>,<code>&gt;</code>,<code>==</code>,<code>!=</code>虽然语法不会报错, 但是会被当成字符串以字典序比较, 不能确保结果的正确性;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if test $1 -le 0; then ... ; fi</span><br><span class=\"line\">if [ $1 -le 0 ]; then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"文件比较-1\"><a href=\"#文件比较-1\" class=\"headerlink\" title=\"文件比较\"></a><strong>文件比较</strong></h4><p><code>test</code>和<code>[]</code>均可以使用<code>-e</code>, <code>-r</code>, <code>-w</code>, <code>-x</code>等文件比较逻辑;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if test -e /usr/local/localtime; then ... ; fi</span><br><span class=\"line\">if [ -e /usr/local/localtime ]; then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"逻辑比较-1\"><a href=\"#逻辑比较-1\" class=\"headerlink\" title=\"逻辑比较\"></a><strong>逻辑比较</strong></h4><p><code>test</code>和<code>[]</code>只能使用<code>-a</code>, <code>-o</code>和<code>!</code>运算符, 但<code>-a</code>和<code>-o</code> 不支持逻辑短路;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if !test $str1 == $str2 -a -n $str3; then ... ; fi</span><br><span class=\"line\">if [ $str1 == $str2 -a -n $str3 ]; then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"test的返回值\"><a href=\"#test的返回值\" class=\"headerlink\" title=\"test的返回值\"></a><strong>test的返回值</strong></h4><p><code>test</code>可以独立于<code>if</code>使用, 其执行结果( 0为真, 1为假 )可以使用<code>$?</code>来接收;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test -z &quot;$1&quot;; echo &quot;$?&quot;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"bash关键字-推荐使用\"><a href=\"#bash关键字-推荐使用\" class=\"headerlink\" title=\"bash关键字 [[ ]] ( 推荐使用 )\"></a><strong>bash关键字 [[ ]] ( 推荐使用 )</strong></h3><p><code>[[</code> 是 bash 的关键字, 而不是命令;<br><code>[[ ]]</code> 比 <code>[]</code> 更通用, 更安全, 功能更强大; 在生产环境中, 推荐使用 <code>[[ ]]</code>;</p>\n<h4 id=\"字符串比较-2\"><a href=\"#字符串比较-2\" class=\"headerlink\" title=\"字符串比较\"></a><strong>字符串比较</strong></h4><p><code>[[ ]]</code> 除了可以使用基本的 <code>=</code>, <code>==</code>, <code>!=</code>, <code>-n</code>, <code>-z</code> 之外, 其 <code>=</code>,<code>==</code> 和 <code>!=</code>还有通配符模式匹配的功能:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 模式串不能加双引号, 否则会被当作普通串</span><br><span class=\"line\">if [[ &quot;test&quot; == t* ]]; then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<p><code>[[ ]]</code> 还可以使用支持正则表达式的 <code>=~</code> 运算符:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 模式串不能加双引号, 否则会被当作普通串</span><br><span class=\"line\">if [[ &quot;test&quot; =~ ^t[a-z].t$ ]]; then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<p><code>[[ ]]</code>也可以使用<code>&lt;</code>和<code>&gt;</code>作字符串比较; 由于<code>[[</code>是bash内置的关键字, <code>&lt;</code>和<code>&gt;</code>并不会被当成重定向, 所以可以不需要转义;</p>\n<h4 id=\"整数比较-2\"><a href=\"#整数比较-2\" class=\"headerlink\" title=\"整数比较\"></a><strong>整数比较</strong></h4><p>和<code>test</code>, <code>[]</code>一样, <code>[[ ]]</code>可以使用<code>-eq</code>, <code>-gt</code>, <code>-ge</code>, <code>-lt</code>, <code>-le</code>, <code>-ne</code> 作整数比较, 但不能使用 <code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code>,<code>==</code>,<code>!=</code> 等比较运算符; 不能使用的原因也是一样的(当成字符串来处理了);</p>\n<h4 id=\"算术拓展\"><a href=\"#算术拓展\" class=\"headerlink\" title=\"算术拓展\"></a><strong>算术拓展</strong></h4><p><code>[[]]</code>支持算术拓展, 但是其对整数比较支持度较差, 算术拓展可能是一个鸡肋功能, 而且运算符与运算数之间不能有空格:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [[ 1+1 -eq 2 ]]; then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<p>此功能不推荐使用;</p>\n<h4 id=\"文件比较-2\"><a href=\"#文件比较-2\" class=\"headerlink\" title=\"文件比较\"></a><strong>文件比较</strong></h4><p>和<code>test</code>, <code>[]</code>一样, <code>[[ ]]</code>可以使用<code>-e</code>, <code>-r</code>, <code>-w</code>, <code>-x</code>等文件比较逻辑;</p>\n<h4 id=\"逻辑比较-2\"><a href=\"#逻辑比较-2\" class=\"headerlink\" title=\"逻辑比较\"></a><strong>逻辑比较</strong></h4><p><code>[[ ]]</code>只能使用<code>&amp;&amp;</code>, <code>||</code>, <code>!</code>运算符, 且<code>&amp;&amp;</code>和<code>||</code>支持逻辑短路;</p>\n<h3 id=\"的使用场景\"><a href=\"#的使用场景\" class=\"headerlink\" title=\"(( ))的使用场景\"></a><strong>(( ))的使用场景</strong></h3><p>无论是<code>test</code>, <code>[]</code>还是<code>[[ ]]</code>, 都不能很好地使用<code>&lt;</code>和<code>&gt;</code>处理整数的比较运算;<br>所以通常使用<code>(())</code>来处理整数的比较运算;<br><code>(())</code>可以使用<code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code>,<code>==</code>,<code>!=</code>运算符;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (( 1 + 1 == 2 )); then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<p>使用<code>(())</code>的时候, 如果使用到了变量, 可以不需要加上<code>$</code>符号;</p>\n<p>&nbsp;</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a><strong>总结</strong></h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">-</th>\n<th style=\"text-align:center\">test 与 [ ]</th>\n<th style=\"text-align:center\">[[ ]]</th>\n<th style=\"text-align:center\">(( ))</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">字符串比较</td>\n<td style=\"text-align:center\">=, ==, !=, -n, -z, \\&lt;, \\&gt;</td>\n<td style=\"text-align:center\">=, ==, !=, -n, -z, &lt;, &gt;</td>\n<td style=\"text-align:center\">不支持</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">整数比较</td>\n<td style=\"text-align:center\">-eq, -gt, -ge, -lt, -le, -ne</td>\n<td style=\"text-align:center\">-eq, -gt, -ge, -lt, -le, -ne</td>\n<td style=\"text-align:center\">>, &gt;=, &lt;, &lt;=, ==, !=</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">文件比较</td>\n<td style=\"text-align:center\">-e, -r, -w, -x, -f, -d, -L, -s, -b, -c, -t, -nt, -ot</td>\n<td style=\"text-align:center\">-e, -r, -w, -x, -f, -d, -L, -s, -b, -c, -t, -nt, -ot</td>\n<td style=\"text-align:center\">不支持</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">逻辑比较</td>\n<td style=\"text-align:center\">-a, -o, !</td>\n<td style=\"text-align:center\">&amp;&amp;, \\</td>\n<td style=\"text-align:center\">\\</td>\n<td>, !</td>\n<td>&amp;&amp;, \\</td>\n<td>\\</td>\n<td>, !</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a><strong>参考链接</strong></h2>","site":{"data":{}},"excerpt":"<blockquote>\n<p>本文基于 GNU bash, version 4.1.2(1)-release (x86_64-redhat-linux-gnu)</p>\n</blockquote>","more":"<h2 id=\"bash-条件判断-的类型与逻辑运算符\"><a href=\"#bash-条件判断-的类型与逻辑运算符\" class=\"headerlink\" title=\"bash 条件判断 的类型与逻辑运算符\"></a><strong>bash 条件判断 的类型与逻辑运算符</strong></h2><h3 id=\"字符串比较\"><a href=\"#字符串比较\" class=\"headerlink\" title=\"字符串比较\"></a><strong>字符串比较</strong></h3><ol>\n<li><code>=</code>同<code>==</code>, 相同为真;</li>\n<li><code>!=</code>, 不相同为真;</li>\n<li><code>-z</code>, 长度为0(空)为真;</li>\n<li><code>-n</code>, 长度不为0(非空)为真;</li>\n<li><code>&lt;</code>, 按字典序小于为真;</li>\n<li><code>&gt;</code>, 按字典序大于为真;</li>\n</ol>\n<h3 id=\"整数比较\"><a href=\"#整数比较\" class=\"headerlink\" title=\"整数比较\"></a><strong>整数比较</strong></h3><ol>\n<li><code>-eq</code>, equals, 相等为真;</li>\n<li><code>-ne</code>, not equals, 不相等为真;</li>\n<li><code>-gt</code>, greater than, 大于为真;</li>\n<li><code>-ge</code>, greater equals, 大于等于为真;</li>\n<li><code>-lt</code>, less than, 小于为真;</li>\n<li><code>-le</code>, less equals, 小于等于为真;</li>\n<li><code>&gt;</code>, 大于;</li>\n<li><code>&gt;=</code>, 大于等于;</li>\n<li><code>&lt;</code>, 小于;</li>\n<li><code>&lt;=</code>, 小于等于;</li>\n<li><code>==</code>, 等于;</li>\n<li><code>!=</code>, 不等于;</li>\n</ol>\n<h3 id=\"文件比较\"><a href=\"#文件比较\" class=\"headerlink\" title=\"文件比较\"></a><strong>文件比较</strong></h3><ol>\n<li><code>-e</code>, exists, 文件存在为真</li>\n<li><code>-r</code>, read, 用户可读为真 </li>\n<li><code>-w</code>, write, 用户可写为真 </li>\n<li><code>-x</code>, execute, 用户可执行为真 </li>\n<li><code>-f</code>, file, 文件为正规文件为真 </li>\n<li><code>-d</code>, directory, 文件为目录为真</li>\n<li><code>-L</code>, link, 文件为链接文件为真</li>\n<li><code>-c</code>, char, 文件为字符特殊文件为真 </li>\n<li><code>-b</code>, block, 文件为块特殊文件为真 </li>\n<li><code>-s</code>, 文件大小非0时为真 </li>\n<li><code>-t</code>, 当文件描述符(默认为1)指定的设备为终端时为真</li>\n<li><code>-nt</code>, newer than, 更新时间更晚为真;</li>\n<li><code>-ot</code>, older than, 更新时间更早为真;</li>\n</ol>\n<h3 id=\"逻辑比较\"><a href=\"#逻辑比较\" class=\"headerlink\" title=\"逻辑比较\"></a><strong>逻辑比较</strong></h3><ol>\n<li><code>-a</code>, and, 逻辑与;</li>\n<li><code>-o</code>, or, 逻辑或;</li>\n<li><code>!</code>, 逻辑非;</li>\n<li><code>&amp;&amp;</code>, 逻辑与( 支持短路 );</li>\n<li><code>||</code>, 逻辑或( 支持短路 );</li>\n</ol>\n<p>&nbsp;</p>\n<h2 id=\"bash-条件判断-的命令-关键字-与语法\"><a href=\"#bash-条件判断-的命令-关键字-与语法\" class=\"headerlink\" title=\"bash 条件判断 的命令(关键字)与语法\"></a><strong>bash 条件判断 的命令(关键字)与语法</strong></h2><h3 id=\"test-与\"><a href=\"#test-与\" class=\"headerlink\" title=\"test 与 [ ]\"></a><strong>test 与 [ ]</strong></h3><p><code>test</code> 与 <code>[</code> 是 shell 的内置命令;<br><code>test</code> 和 <code>[]</code> 可以用于比较字符串, 整数, 文件, <code>test expr</code>与<code>[ expr ]</code>有等价的效果;</p>\n<h4 id=\"字符串比较-1\"><a href=\"#字符串比较-1\" class=\"headerlink\" title=\"字符串比较\"></a><strong>字符串比较</strong></h4><p><code>test</code>可以使用<code>=</code>, <code>==</code>, <code>!=</code>比较, bash 4.1版本下也能使用<code>-n</code>, <code>-z</code>比较字符串( 旧版本可能不支持该方式 );<br><code>[]</code>可以使用上述全部的比较符号;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if !test $str1 == $str2; then ... ; fi</span><br><span class=\"line\">if ! [ $str1 == $str2 ]; then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<p><code>test</code> 与 <code>[]</code> 也可以使用 <code>&lt;</code> 和 <code>&gt;</code> 作字符串比较; 但是有一点要注意, <code>test</code>和<code>[</code>是 shell 的内置命令, 使用 <code>&lt;</code> 和 <code>&gt;</code> 需要转义, 否则会被当成重定向; </p>\n<h4 id=\"整数比较-1\"><a href=\"#整数比较-1\" class=\"headerlink\" title=\"整数比较\"></a><strong>整数比较</strong></h4><p><code>test</code>和<code>[]</code>均可以使用<code>-eq</code>, <code>-gt</code>, <code>-ge</code>, <code>-lt</code>, <code>-le</code>, <code>-ne</code> 作整数比较, 但不能使用 <code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code>,<code>==</code>,<code>!=</code> 等比较运算符;<br>使用<code>&lt;</code>,<code>&gt;</code>,<code>==</code>,<code>!=</code>虽然语法不会报错, 但是会被当成字符串以字典序比较, 不能确保结果的正确性;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if test $1 -le 0; then ... ; fi</span><br><span class=\"line\">if [ $1 -le 0 ]; then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"文件比较-1\"><a href=\"#文件比较-1\" class=\"headerlink\" title=\"文件比较\"></a><strong>文件比较</strong></h4><p><code>test</code>和<code>[]</code>均可以使用<code>-e</code>, <code>-r</code>, <code>-w</code>, <code>-x</code>等文件比较逻辑;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if test -e /usr/local/localtime; then ... ; fi</span><br><span class=\"line\">if [ -e /usr/local/localtime ]; then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"逻辑比较-1\"><a href=\"#逻辑比较-1\" class=\"headerlink\" title=\"逻辑比较\"></a><strong>逻辑比较</strong></h4><p><code>test</code>和<code>[]</code>只能使用<code>-a</code>, <code>-o</code>和<code>!</code>运算符, 但<code>-a</code>和<code>-o</code> 不支持逻辑短路;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if !test $str1 == $str2 -a -n $str3; then ... ; fi</span><br><span class=\"line\">if [ $str1 == $str2 -a -n $str3 ]; then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"test的返回值\"><a href=\"#test的返回值\" class=\"headerlink\" title=\"test的返回值\"></a><strong>test的返回值</strong></h4><p><code>test</code>可以独立于<code>if</code>使用, 其执行结果( 0为真, 1为假 )可以使用<code>$?</code>来接收;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test -z &quot;$1&quot;; echo &quot;$?&quot;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"bash关键字-推荐使用\"><a href=\"#bash关键字-推荐使用\" class=\"headerlink\" title=\"bash关键字 [[ ]] ( 推荐使用 )\"></a><strong>bash关键字 [[ ]] ( 推荐使用 )</strong></h3><p><code>[[</code> 是 bash 的关键字, 而不是命令;<br><code>[[ ]]</code> 比 <code>[]</code> 更通用, 更安全, 功能更强大; 在生产环境中, 推荐使用 <code>[[ ]]</code>;</p>\n<h4 id=\"字符串比较-2\"><a href=\"#字符串比较-2\" class=\"headerlink\" title=\"字符串比较\"></a><strong>字符串比较</strong></h4><p><code>[[ ]]</code> 除了可以使用基本的 <code>=</code>, <code>==</code>, <code>!=</code>, <code>-n</code>, <code>-z</code> 之外, 其 <code>=</code>,<code>==</code> 和 <code>!=</code>还有通配符模式匹配的功能:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 模式串不能加双引号, 否则会被当作普通串</span><br><span class=\"line\">if [[ &quot;test&quot; == t* ]]; then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<p><code>[[ ]]</code> 还可以使用支持正则表达式的 <code>=~</code> 运算符:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 模式串不能加双引号, 否则会被当作普通串</span><br><span class=\"line\">if [[ &quot;test&quot; =~ ^t[a-z].t$ ]]; then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<p><code>[[ ]]</code>也可以使用<code>&lt;</code>和<code>&gt;</code>作字符串比较; 由于<code>[[</code>是bash内置的关键字, <code>&lt;</code>和<code>&gt;</code>并不会被当成重定向, 所以可以不需要转义;</p>\n<h4 id=\"整数比较-2\"><a href=\"#整数比较-2\" class=\"headerlink\" title=\"整数比较\"></a><strong>整数比较</strong></h4><p>和<code>test</code>, <code>[]</code>一样, <code>[[ ]]</code>可以使用<code>-eq</code>, <code>-gt</code>, <code>-ge</code>, <code>-lt</code>, <code>-le</code>, <code>-ne</code> 作整数比较, 但不能使用 <code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code>,<code>==</code>,<code>!=</code> 等比较运算符; 不能使用的原因也是一样的(当成字符串来处理了);</p>\n<h4 id=\"算术拓展\"><a href=\"#算术拓展\" class=\"headerlink\" title=\"算术拓展\"></a><strong>算术拓展</strong></h4><p><code>[[]]</code>支持算术拓展, 但是其对整数比较支持度较差, 算术拓展可能是一个鸡肋功能, 而且运算符与运算数之间不能有空格:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [[ 1+1 -eq 2 ]]; then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<p>此功能不推荐使用;</p>\n<h4 id=\"文件比较-2\"><a href=\"#文件比较-2\" class=\"headerlink\" title=\"文件比较\"></a><strong>文件比较</strong></h4><p>和<code>test</code>, <code>[]</code>一样, <code>[[ ]]</code>可以使用<code>-e</code>, <code>-r</code>, <code>-w</code>, <code>-x</code>等文件比较逻辑;</p>\n<h4 id=\"逻辑比较-2\"><a href=\"#逻辑比较-2\" class=\"headerlink\" title=\"逻辑比较\"></a><strong>逻辑比较</strong></h4><p><code>[[ ]]</code>只能使用<code>&amp;&amp;</code>, <code>||</code>, <code>!</code>运算符, 且<code>&amp;&amp;</code>和<code>||</code>支持逻辑短路;</p>\n<h3 id=\"的使用场景\"><a href=\"#的使用场景\" class=\"headerlink\" title=\"(( ))的使用场景\"></a><strong>(( ))的使用场景</strong></h3><p>无论是<code>test</code>, <code>[]</code>还是<code>[[ ]]</code>, 都不能很好地使用<code>&lt;</code>和<code>&gt;</code>处理整数的比较运算;<br>所以通常使用<code>(())</code>来处理整数的比较运算;<br><code>(())</code>可以使用<code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code>,<code>==</code>,<code>!=</code>运算符;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (( 1 + 1 == 2 )); then ... ; fi</span><br></pre></td></tr></table></figure></p>\n<p>使用<code>(())</code>的时候, 如果使用到了变量, 可以不需要加上<code>$</code>符号;</p>\n<p>&nbsp;</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a><strong>总结</strong></h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">-</th>\n<th style=\"text-align:center\">test 与 [ ]</th>\n<th style=\"text-align:center\">[[ ]]</th>\n<th style=\"text-align:center\">(( ))</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">字符串比较</td>\n<td style=\"text-align:center\">=, ==, !=, -n, -z, \\&lt;, \\&gt;</td>\n<td style=\"text-align:center\">=, ==, !=, -n, -z, &lt;, &gt;</td>\n<td style=\"text-align:center\">不支持</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">整数比较</td>\n<td style=\"text-align:center\">-eq, -gt, -ge, -lt, -le, -ne</td>\n<td style=\"text-align:center\">-eq, -gt, -ge, -lt, -le, -ne</td>\n<td style=\"text-align:center\">>, &gt;=, &lt;, &lt;=, ==, !=</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">文件比较</td>\n<td style=\"text-align:center\">-e, -r, -w, -x, -f, -d, -L, -s, -b, -c, -t, -nt, -ot</td>\n<td style=\"text-align:center\">-e, -r, -w, -x, -f, -d, -L, -s, -b, -c, -t, -nt, -ot</td>\n<td style=\"text-align:center\">不支持</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">逻辑比较</td>\n<td style=\"text-align:center\">-a, -o, !</td>\n<td style=\"text-align:center\">&amp;&amp;, \\</td>\n<td style=\"text-align:center\">\\</td>\n<td>, !</td>\n<td>&amp;&amp;, \\</td>\n<td>\\</td>\n<td>, !</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a><strong>参考链接</strong></h2>"},{"title":"bash 结束死循环的方法","date":"2017-11-04T16:00:00.000Z","_content":"\n> linux 中有很多实用的工具, 采用了这样一种工作方式:\n定时执行(1/s, 1/3s 等)一次指定逻辑, 当用户按下 ctrl + c 发出 SIGINT 信号时, 结束进程; 如果接收不到 SIGINT/SIGTERM 等信号, 进程则会一直执行下去;\n类似的工具包括 ioutil, jmap 等;\n本文整理了实现上述逻辑的一些典型方法;\n\n<!--more-->\n\n### **方法1: 监听命令返回值**\n根据 [GNU 相关规范](http://www.gnu.org/software/bash/manual/bashref.html#Exit-Status), 如果一个进程是由于响应信号 signal 而终止, 其返回码必须是 128 + signal_number;\n那么, 可以通过判断其返回码 $? 是否大于 128 而判断 COMMAND 是否响应了信号;\n```\nwhile [ 1 ]; do\n    COMMAND\n    test $? -gt 128 && break\ndone\n```\n更精确的, 如果只想判断 COMMAND 是否响应了 SIGINT 信号, 可以直接判断:\n```\n# SIGINT = 2, 128 + SIGINT = 130\ntest $? -eq 130 && break\n```\n特殊的情况下, COMMAND 忽略了 SIGINT 信号, 可以使用 -e 选项强制其响应 SIGINT 信号:\n```\nwhile [ 1 ]; do\n    COMMAND -e\n    test $? -gt 128 && break\ndone\n```\n\n### **方法2: 命令返回值短路**\n方法2 是方法1 的简化版本:\n```\nwhile [ 1 ]; do\n    COMMAND -e || break\ndone\n```\n其本质是监听 COMMAND 的返回值 $? 是否为 0, 如果是 0, 那么 break 中断命令就被短路了; 如果是非 0, 便会执行 break, 跳出死循环;\n这种方法巧妙得使用 || 逻辑运算符简化了代码, 但是有一个缺陷: 当 COMMAND 并非因为响应 ctrl + c 而是其他错误返回了非 0 的状态时, 循环也会结束;\n这是方法2 相比 方法1 略显不精准的地方;\n\n### **方法3: 使用 trap 捕获信号**\n\n```\n# 捕获到 SIGINT 即 exit 0 正常退出\ntrap \"exit 0\" SIGINT\nwhile [ 1 ]; do\n    COMMAND -e\ndone\n```\n\n### **方法4: 使用 ctrl + z 配合 SIGTERM 信号**\n当命令运行在前台, 使用 ctrl + z 挂起进程, 会得到以下输出:\n``` bash\n# ^Z\n[1]+  Stopped                 COMMAND\n\n# 1 是挂起进程的作业号(job number), kill [job_number] 会向该作业发送 SIGtERM 信号\nkill %1\n# 发送 SIGTERM 信号给最近一次被挂起的进程\nkill %%\n\n# 执行的结果\n[1]+ Terminated               COMMAND\n```\n\n### **方法5: 使用 -e 选项**\n使用 set -e, 开启命令返回码校验功能, 一旦 COMMAND 返回非 0, 立即结束进程;\n```\n#!/bin/bash\nset -e\nwhile [ 1 ]; do\n    COMMAND -e\ndone\n```\n或者作为 bash 的参数:\n```\n#!/bin/bash -e\nwhile [ 1 ]; do\n    COMMAND -e\ndone\n```\n\n\n### **参考链接**\n- [Terminating an infinite loop](https://unix.stackexchange.com/questions/42287/terminating-an-infinite-loop)\n- [3.7.5 Exit Status](http://www.gnu.org/software/bash/manual/bashref.html#Exit-Status)\n- [How to stop the loop bash script in terminal](https://unix.stackexchange.com/questions/48425/how-to-stop-the-loop-bash-script-in-terminal/48465#48465)\n- [Unix/Linux 脚本中 “set -e” 的作用](http://blog.csdn.net/todd911/article/details/9954961)\n\n","source":"_posts/linux-shell--bash结束死循环的方法.md","raw":"---\ntitle: bash 结束死循环的方法\ndate: 2017-11-05\ntags:\n  - linux:shell\ncategories:\n  - linux\n  - shell\n---\n\n> linux 中有很多实用的工具, 采用了这样一种工作方式:\n定时执行(1/s, 1/3s 等)一次指定逻辑, 当用户按下 ctrl + c 发出 SIGINT 信号时, 结束进程; 如果接收不到 SIGINT/SIGTERM 等信号, 进程则会一直执行下去;\n类似的工具包括 ioutil, jmap 等;\n本文整理了实现上述逻辑的一些典型方法;\n\n<!--more-->\n\n### **方法1: 监听命令返回值**\n根据 [GNU 相关规范](http://www.gnu.org/software/bash/manual/bashref.html#Exit-Status), 如果一个进程是由于响应信号 signal 而终止, 其返回码必须是 128 + signal_number;\n那么, 可以通过判断其返回码 $? 是否大于 128 而判断 COMMAND 是否响应了信号;\n```\nwhile [ 1 ]; do\n    COMMAND\n    test $? -gt 128 && break\ndone\n```\n更精确的, 如果只想判断 COMMAND 是否响应了 SIGINT 信号, 可以直接判断:\n```\n# SIGINT = 2, 128 + SIGINT = 130\ntest $? -eq 130 && break\n```\n特殊的情况下, COMMAND 忽略了 SIGINT 信号, 可以使用 -e 选项强制其响应 SIGINT 信号:\n```\nwhile [ 1 ]; do\n    COMMAND -e\n    test $? -gt 128 && break\ndone\n```\n\n### **方法2: 命令返回值短路**\n方法2 是方法1 的简化版本:\n```\nwhile [ 1 ]; do\n    COMMAND -e || break\ndone\n```\n其本质是监听 COMMAND 的返回值 $? 是否为 0, 如果是 0, 那么 break 中断命令就被短路了; 如果是非 0, 便会执行 break, 跳出死循环;\n这种方法巧妙得使用 || 逻辑运算符简化了代码, 但是有一个缺陷: 当 COMMAND 并非因为响应 ctrl + c 而是其他错误返回了非 0 的状态时, 循环也会结束;\n这是方法2 相比 方法1 略显不精准的地方;\n\n### **方法3: 使用 trap 捕获信号**\n\n```\n# 捕获到 SIGINT 即 exit 0 正常退出\ntrap \"exit 0\" SIGINT\nwhile [ 1 ]; do\n    COMMAND -e\ndone\n```\n\n### **方法4: 使用 ctrl + z 配合 SIGTERM 信号**\n当命令运行在前台, 使用 ctrl + z 挂起进程, 会得到以下输出:\n``` bash\n# ^Z\n[1]+  Stopped                 COMMAND\n\n# 1 是挂起进程的作业号(job number), kill [job_number] 会向该作业发送 SIGtERM 信号\nkill %1\n# 发送 SIGTERM 信号给最近一次被挂起的进程\nkill %%\n\n# 执行的结果\n[1]+ Terminated               COMMAND\n```\n\n### **方法5: 使用 -e 选项**\n使用 set -e, 开启命令返回码校验功能, 一旦 COMMAND 返回非 0, 立即结束进程;\n```\n#!/bin/bash\nset -e\nwhile [ 1 ]; do\n    COMMAND -e\ndone\n```\n或者作为 bash 的参数:\n```\n#!/bin/bash -e\nwhile [ 1 ]; do\n    COMMAND -e\ndone\n```\n\n\n### **参考链接**\n- [Terminating an infinite loop](https://unix.stackexchange.com/questions/42287/terminating-an-infinite-loop)\n- [3.7.5 Exit Status](http://www.gnu.org/software/bash/manual/bashref.html#Exit-Status)\n- [How to stop the loop bash script in terminal](https://unix.stackexchange.com/questions/48425/how-to-stop-the-loop-bash-script-in-terminal/48465#48465)\n- [Unix/Linux 脚本中 “set -e” 的作用](http://blog.csdn.net/todd911/article/details/9954961)\n\n","slug":"linux-shell--bash结束死循环的方法","published":1,"updated":"2018-01-02T15:41:21.515Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz7uhpb0005g5jxdru05zrh","content":"<blockquote>\n<p>linux 中有很多实用的工具, 采用了这样一种工作方式:<br>定时执行(1/s, 1/3s 等)一次指定逻辑, 当用户按下 ctrl + c 发出 SIGINT 信号时, 结束进程; 如果接收不到 SIGINT/SIGTERM 等信号, 进程则会一直执行下去;<br>类似的工具包括 ioutil, jmap 等;<br>本文整理了实现上述逻辑的一些典型方法;</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"方法1-监听命令返回值\"><a href=\"#方法1-监听命令返回值\" class=\"headerlink\" title=\"方法1: 监听命令返回值\"></a><strong>方法1: 监听命令返回值</strong></h3><p>根据 <a href=\"http://www.gnu.org/software/bash/manual/bashref.html#Exit-Status\" target=\"_blank\" rel=\"noopener\">GNU 相关规范</a>, 如果一个进程是由于响应信号 signal 而终止, 其返回码必须是 128 + signal_number;<br>那么, 可以通过判断其返回码 $? 是否大于 128 而判断 COMMAND 是否响应了信号;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while [ 1 ]; do</span><br><span class=\"line\">    COMMAND</span><br><span class=\"line\">    test $? -gt 128 &amp;&amp; break</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure></p>\n<p>更精确的, 如果只想判断 COMMAND 是否响应了 SIGINT 信号, 可以直接判断:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># SIGINT = 2, 128 + SIGINT = 130</span><br><span class=\"line\">test $? -eq 130 &amp;&amp; break</span><br></pre></td></tr></table></figure></p>\n<p>特殊的情况下, COMMAND 忽略了 SIGINT 信号, 可以使用 -e 选项强制其响应 SIGINT 信号:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while [ 1 ]; do</span><br><span class=\"line\">    COMMAND -e</span><br><span class=\"line\">    test $? -gt 128 &amp;&amp; break</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"方法2-命令返回值短路\"><a href=\"#方法2-命令返回值短路\" class=\"headerlink\" title=\"方法2: 命令返回值短路\"></a><strong>方法2: 命令返回值短路</strong></h3><p>方法2 是方法1 的简化版本:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while [ 1 ]; do</span><br><span class=\"line\">    COMMAND -e || break</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure></p>\n<p>其本质是监听 COMMAND 的返回值 $? 是否为 0, 如果是 0, 那么 break 中断命令就被短路了; 如果是非 0, 便会执行 break, 跳出死循环;<br>这种方法巧妙得使用 || 逻辑运算符简化了代码, 但是有一个缺陷: 当 COMMAND 并非因为响应 ctrl + c 而是其他错误返回了非 0 的状态时, 循环也会结束;<br>这是方法2 相比 方法1 略显不精准的地方;</p>\n<h3 id=\"方法3-使用-trap-捕获信号\"><a href=\"#方法3-使用-trap-捕获信号\" class=\"headerlink\" title=\"方法3: 使用 trap 捕获信号\"></a><strong>方法3: 使用 trap 捕获信号</strong></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 捕获到 SIGINT 即 exit 0 正常退出</span><br><span class=\"line\">trap &quot;exit 0&quot; SIGINT</span><br><span class=\"line\">while [ 1 ]; do</span><br><span class=\"line\">    COMMAND -e</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h3 id=\"方法4-使用-ctrl-z-配合-SIGTERM-信号\"><a href=\"#方法4-使用-ctrl-z-配合-SIGTERM-信号\" class=\"headerlink\" title=\"方法4: 使用 ctrl + z 配合 SIGTERM 信号\"></a><strong>方法4: 使用 ctrl + z 配合 SIGTERM 信号</strong></h3><p>当命令运行在前台, 使用 ctrl + z 挂起进程, 会得到以下输出:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ^Z</span></span><br><span class=\"line\">[1]+  Stopped                 COMMAND</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1 是挂起进程的作业号(job number), kill [job_number] 会向该作业发送 SIGtERM 信号</span></span><br><span class=\"line\"><span class=\"built_in\">kill</span> %1</span><br><span class=\"line\"><span class=\"comment\"># 发送 SIGTERM 信号给最近一次被挂起的进程</span></span><br><span class=\"line\"><span class=\"built_in\">kill</span> %%</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行的结果</span></span><br><span class=\"line\">[1]+ Terminated               COMMAND</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"方法5-使用-e-选项\"><a href=\"#方法5-使用-e-选项\" class=\"headerlink\" title=\"方法5: 使用 -e 选项\"></a><strong>方法5: 使用 -e 选项</strong></h3><p>使用 set -e, 开启命令返回码校验功能, 一旦 COMMAND 返回非 0, 立即结束进程;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">set -e</span><br><span class=\"line\">while [ 1 ]; do</span><br><span class=\"line\">    COMMAND -e</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure></p>\n<p>或者作为 bash 的参数:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash -e</span><br><span class=\"line\">while [ 1 ]; do</span><br><span class=\"line\">    COMMAND -e</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a><strong>参考链接</strong></h3><ul>\n<li><a href=\"https://unix.stackexchange.com/questions/42287/terminating-an-infinite-loop\" target=\"_blank\" rel=\"noopener\">Terminating an infinite loop</a></li>\n<li><a href=\"http://www.gnu.org/software/bash/manual/bashref.html#Exit-Status\" target=\"_blank\" rel=\"noopener\">3.7.5 Exit Status</a></li>\n<li><a href=\"https://unix.stackexchange.com/questions/48425/how-to-stop-the-loop-bash-script-in-terminal/48465#48465\" target=\"_blank\" rel=\"noopener\">How to stop the loop bash script in terminal</a></li>\n<li><a href=\"http://blog.csdn.net/todd911/article/details/9954961\" target=\"_blank\" rel=\"noopener\">Unix/Linux 脚本中 “set -e” 的作用</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>linux 中有很多实用的工具, 采用了这样一种工作方式:<br>定时执行(1/s, 1/3s 等)一次指定逻辑, 当用户按下 ctrl + c 发出 SIGINT 信号时, 结束进程; 如果接收不到 SIGINT/SIGTERM 等信号, 进程则会一直执行下去;<br>类似的工具包括 ioutil, jmap 等;<br>本文整理了实现上述逻辑的一些典型方法;</p>\n</blockquote>","more":"<h3 id=\"方法1-监听命令返回值\"><a href=\"#方法1-监听命令返回值\" class=\"headerlink\" title=\"方法1: 监听命令返回值\"></a><strong>方法1: 监听命令返回值</strong></h3><p>根据 <a href=\"http://www.gnu.org/software/bash/manual/bashref.html#Exit-Status\" target=\"_blank\" rel=\"noopener\">GNU 相关规范</a>, 如果一个进程是由于响应信号 signal 而终止, 其返回码必须是 128 + signal_number;<br>那么, 可以通过判断其返回码 $? 是否大于 128 而判断 COMMAND 是否响应了信号;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while [ 1 ]; do</span><br><span class=\"line\">    COMMAND</span><br><span class=\"line\">    test $? -gt 128 &amp;&amp; break</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure></p>\n<p>更精确的, 如果只想判断 COMMAND 是否响应了 SIGINT 信号, 可以直接判断:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># SIGINT = 2, 128 + SIGINT = 130</span><br><span class=\"line\">test $? -eq 130 &amp;&amp; break</span><br></pre></td></tr></table></figure></p>\n<p>特殊的情况下, COMMAND 忽略了 SIGINT 信号, 可以使用 -e 选项强制其响应 SIGINT 信号:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while [ 1 ]; do</span><br><span class=\"line\">    COMMAND -e</span><br><span class=\"line\">    test $? -gt 128 &amp;&amp; break</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"方法2-命令返回值短路\"><a href=\"#方法2-命令返回值短路\" class=\"headerlink\" title=\"方法2: 命令返回值短路\"></a><strong>方法2: 命令返回值短路</strong></h3><p>方法2 是方法1 的简化版本:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while [ 1 ]; do</span><br><span class=\"line\">    COMMAND -e || break</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure></p>\n<p>其本质是监听 COMMAND 的返回值 $? 是否为 0, 如果是 0, 那么 break 中断命令就被短路了; 如果是非 0, 便会执行 break, 跳出死循环;<br>这种方法巧妙得使用 || 逻辑运算符简化了代码, 但是有一个缺陷: 当 COMMAND 并非因为响应 ctrl + c 而是其他错误返回了非 0 的状态时, 循环也会结束;<br>这是方法2 相比 方法1 略显不精准的地方;</p>\n<h3 id=\"方法3-使用-trap-捕获信号\"><a href=\"#方法3-使用-trap-捕获信号\" class=\"headerlink\" title=\"方法3: 使用 trap 捕获信号\"></a><strong>方法3: 使用 trap 捕获信号</strong></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 捕获到 SIGINT 即 exit 0 正常退出</span><br><span class=\"line\">trap &quot;exit 0&quot; SIGINT</span><br><span class=\"line\">while [ 1 ]; do</span><br><span class=\"line\">    COMMAND -e</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h3 id=\"方法4-使用-ctrl-z-配合-SIGTERM-信号\"><a href=\"#方法4-使用-ctrl-z-配合-SIGTERM-信号\" class=\"headerlink\" title=\"方法4: 使用 ctrl + z 配合 SIGTERM 信号\"></a><strong>方法4: 使用 ctrl + z 配合 SIGTERM 信号</strong></h3><p>当命令运行在前台, 使用 ctrl + z 挂起进程, 会得到以下输出:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ^Z</span></span><br><span class=\"line\">[1]+  Stopped                 COMMAND</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1 是挂起进程的作业号(job number), kill [job_number] 会向该作业发送 SIGtERM 信号</span></span><br><span class=\"line\"><span class=\"built_in\">kill</span> %1</span><br><span class=\"line\"><span class=\"comment\"># 发送 SIGTERM 信号给最近一次被挂起的进程</span></span><br><span class=\"line\"><span class=\"built_in\">kill</span> %%</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行的结果</span></span><br><span class=\"line\">[1]+ Terminated               COMMAND</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"方法5-使用-e-选项\"><a href=\"#方法5-使用-e-选项\" class=\"headerlink\" title=\"方法5: 使用 -e 选项\"></a><strong>方法5: 使用 -e 选项</strong></h3><p>使用 set -e, 开启命令返回码校验功能, 一旦 COMMAND 返回非 0, 立即结束进程;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">set -e</span><br><span class=\"line\">while [ 1 ]; do</span><br><span class=\"line\">    COMMAND -e</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure></p>\n<p>或者作为 bash 的参数:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash -e</span><br><span class=\"line\">while [ 1 ]; do</span><br><span class=\"line\">    COMMAND -e</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a><strong>参考链接</strong></h3><ul>\n<li><a href=\"https://unix.stackexchange.com/questions/42287/terminating-an-infinite-loop\" target=\"_blank\" rel=\"noopener\">Terminating an infinite loop</a></li>\n<li><a href=\"http://www.gnu.org/software/bash/manual/bashref.html#Exit-Status\" target=\"_blank\" rel=\"noopener\">3.7.5 Exit Status</a></li>\n<li><a href=\"https://unix.stackexchange.com/questions/48425/how-to-stop-the-loop-bash-script-in-terminal/48465#48465\" target=\"_blank\" rel=\"noopener\">How to stop the loop bash script in terminal</a></li>\n<li><a href=\"http://blog.csdn.net/todd911/article/details/9954961\" target=\"_blank\" rel=\"noopener\">Unix/Linux 脚本中 “set -e” 的作用</a></li>\n</ul>"},{"title":"r syncd 配置与运维","date":"2017-10-14T15:20:21.000Z","_content":"\n> 本文主要梳理 rsync server 的基本配置与使用方式;\n\n<!--more-->\n\n### **rsync server 的几个关键配置文件**\n1. /etc/rsyncd.conf: 主配置文件;\n2. /etc/rsyncd.password/rsyncd.secrets: 秘钥文件;\n3. /etc/rsyncd.motd: rysnc 服务器元信息, 非必须;\n\n其中, rsyncd.password 秘钥文件的掩码必须是 600:\n``` bash\n> ll /etc/ | grep rsyncd\n-rw-r--r--   1 root root    361 Apr  6  2017 rsyncd.conf\n-rw-------   1 root root     24 Apr  6  2017 rsyncd.password\n```\n\n### **rsyncd.conf 配置说明**\n一个典型的 rsyncd.conf 文件如下:\n``` bash\n# rsyncd 守护进程运行系统用户全局配置, 可在具体的块中配置\nuid=nobody\ngid=nobody\n\n# 是否需要 chroot, 若为 yes, 当客户端连接某模块时, 首先 chroot 到 模块的 path 目录下\nuser chroot = no\n\nmax connections = 200\ntimeout = 600\n\npid file = /data1/trans_file/rsyncd.pid\nlock file = /data1/trans_file/rsyncd.lock\nlog file = /data1/trans_file/rsyncd.log\n# 用户秘钥文件, 可在具体的模块中配置\nsecrets file = /etc/rsyncd.password\n# 服务器元信息, 非必选\n# motd file = /etc/rsyncd/rsyncd.motd\n# 指定不需要压缩就可以直接传输的文件类型\ndont compress = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2\n\n# 模块配置\n[wireless_log]\n# 模块使用的 user, 此模块将使用 rsyncd.password 文件中 sync 用户对应的秘钥进行文件传输\nauth users = sync\npath = /data1/trans_file/files/wireless_log\nignore errors\n# 是否只读\nread only = no\n# 是否允许列出模块里的内容\nlist = no\n```\n\n### **rsyncd.password / rsyncd.secrets 配置说明**\n以 `:` 分隔, 用户名和密码, 每行一个:\n```\nuser1:password1\nuser2:password2\n```\n\n### **rsyncd 启动方式**\n``` bash\n# 当负载高时, 以守护进程的方式运行 rsyncd\nsudo /usr/bin/rsync --daemon --config=/etc/rsyncd.conf\n```\n\n### **参考链接**\n- [centos下配置rsyncd服务器](https://segmentfault.com/a/1190000000444614)\n- [RSync实现文件备份同步](http://www.cnblogs.com/itech/archive/2009/08/10/1542945.html)\n\n","source":"_posts/rsync--rsyncd配置与运行.md","raw":"---\ntitle: r syncd 配置与运维\ndate: 2017-10-14 23:20:21\ntags:\n  - rsync\ncategories:\n  - rsync\n---\n\n> 本文主要梳理 rsync server 的基本配置与使用方式;\n\n<!--more-->\n\n### **rsync server 的几个关键配置文件**\n1. /etc/rsyncd.conf: 主配置文件;\n2. /etc/rsyncd.password/rsyncd.secrets: 秘钥文件;\n3. /etc/rsyncd.motd: rysnc 服务器元信息, 非必须;\n\n其中, rsyncd.password 秘钥文件的掩码必须是 600:\n``` bash\n> ll /etc/ | grep rsyncd\n-rw-r--r--   1 root root    361 Apr  6  2017 rsyncd.conf\n-rw-------   1 root root     24 Apr  6  2017 rsyncd.password\n```\n\n### **rsyncd.conf 配置说明**\n一个典型的 rsyncd.conf 文件如下:\n``` bash\n# rsyncd 守护进程运行系统用户全局配置, 可在具体的块中配置\nuid=nobody\ngid=nobody\n\n# 是否需要 chroot, 若为 yes, 当客户端连接某模块时, 首先 chroot 到 模块的 path 目录下\nuser chroot = no\n\nmax connections = 200\ntimeout = 600\n\npid file = /data1/trans_file/rsyncd.pid\nlock file = /data1/trans_file/rsyncd.lock\nlog file = /data1/trans_file/rsyncd.log\n# 用户秘钥文件, 可在具体的模块中配置\nsecrets file = /etc/rsyncd.password\n# 服务器元信息, 非必选\n# motd file = /etc/rsyncd/rsyncd.motd\n# 指定不需要压缩就可以直接传输的文件类型\ndont compress = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2\n\n# 模块配置\n[wireless_log]\n# 模块使用的 user, 此模块将使用 rsyncd.password 文件中 sync 用户对应的秘钥进行文件传输\nauth users = sync\npath = /data1/trans_file/files/wireless_log\nignore errors\n# 是否只读\nread only = no\n# 是否允许列出模块里的内容\nlist = no\n```\n\n### **rsyncd.password / rsyncd.secrets 配置说明**\n以 `:` 分隔, 用户名和密码, 每行一个:\n```\nuser1:password1\nuser2:password2\n```\n\n### **rsyncd 启动方式**\n``` bash\n# 当负载高时, 以守护进程的方式运行 rsyncd\nsudo /usr/bin/rsync --daemon --config=/etc/rsyncd.conf\n```\n\n### **参考链接**\n- [centos下配置rsyncd服务器](https://segmentfault.com/a/1190000000444614)\n- [RSync实现文件备份同步](http://www.cnblogs.com/itech/archive/2009/08/10/1542945.html)\n\n","slug":"rsync--rsyncd配置与运行","published":1,"updated":"2018-01-03T15:45:15.707Z","_id":"cjbz8011y0000l1jxnqav3xz3","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>本文主要梳理 rsync server 的基本配置与使用方式;</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"rsync-server-的几个关键配置文件\"><a href=\"#rsync-server-的几个关键配置文件\" class=\"headerlink\" title=\"rsync server 的几个关键配置文件\"></a><strong>rsync server 的几个关键配置文件</strong></h3><ol>\n<li>/etc/rsyncd.conf: 主配置文件;</li>\n<li>/etc/rsyncd.password/rsyncd.secrets: 秘钥文件;</li>\n<li>/etc/rsyncd.motd: rysnc 服务器元信息, 非必须;</li>\n</ol>\n<p>其中, rsyncd.password 秘钥文件的掩码必须是 600:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; ll /etc/ | grep rsyncd</span><br><span class=\"line\">-rw-r--r--   1 root root    361 Apr  6  2017 rsyncd.conf</span><br><span class=\"line\">-rw-------   1 root root     24 Apr  6  2017 rsyncd.password</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"rsyncd-conf-配置说明\"><a href=\"#rsyncd-conf-配置说明\" class=\"headerlink\" title=\"rsyncd.conf 配置说明\"></a><strong>rsyncd.conf 配置说明</strong></h3><p>一个典型的 rsyncd.conf 文件如下:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># rsyncd 守护进程运行系统用户全局配置, 可在具体的块中配置</span></span><br><span class=\"line\">uid=nobody</span><br><span class=\"line\">gid=nobody</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 是否需要 chroot, 若为 yes, 当客户端连接某模块时, 首先 chroot 到 模块的 path 目录下</span></span><br><span class=\"line\">user chroot = no</span><br><span class=\"line\"></span><br><span class=\"line\">max connections = 200</span><br><span class=\"line\">timeout = 600</span><br><span class=\"line\"></span><br><span class=\"line\">pid file = /data1/trans_file/rsyncd.pid</span><br><span class=\"line\">lock file = /data1/trans_file/rsyncd.lock</span><br><span class=\"line\"><span class=\"built_in\">log</span> file = /data1/trans_file/rsyncd.log</span><br><span class=\"line\"><span class=\"comment\"># 用户秘钥文件, 可在具体的模块中配置</span></span><br><span class=\"line\">secrets file = /etc/rsyncd.password</span><br><span class=\"line\"><span class=\"comment\"># 服务器元信息, 非必选</span></span><br><span class=\"line\"><span class=\"comment\"># motd file = /etc/rsyncd/rsyncd.motd</span></span><br><span class=\"line\"><span class=\"comment\"># 指定不需要压缩就可以直接传输的文件类型</span></span><br><span class=\"line\">dont compress = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 模块配置</span></span><br><span class=\"line\">[wireless_log]</span><br><span class=\"line\"><span class=\"comment\"># 模块使用的 user, 此模块将使用 rsyncd.password 文件中 sync 用户对应的秘钥进行文件传输</span></span><br><span class=\"line\">auth users = sync</span><br><span class=\"line\">path = /data1/trans_file/files/wireless_log</span><br><span class=\"line\">ignore errors</span><br><span class=\"line\"><span class=\"comment\"># 是否只读</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> only = no</span><br><span class=\"line\"><span class=\"comment\"># 是否允许列出模块里的内容</span></span><br><span class=\"line\">list = no</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"rsyncd-password-rsyncd-secrets-配置说明\"><a href=\"#rsyncd-password-rsyncd-secrets-配置说明\" class=\"headerlink\" title=\"rsyncd.password / rsyncd.secrets 配置说明\"></a><strong>rsyncd.password / rsyncd.secrets 配置说明</strong></h3><p>以 <code>:</code> 分隔, 用户名和密码, 每行一个:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user1:password1</span><br><span class=\"line\">user2:password2</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"rsyncd-启动方式\"><a href=\"#rsyncd-启动方式\" class=\"headerlink\" title=\"rsyncd 启动方式\"></a><strong>rsyncd 启动方式</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 当负载高时, 以守护进程的方式运行 rsyncd</span></span><br><span class=\"line\">sudo /usr/bin/rsync --daemon --config=/etc/rsyncd.conf</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a><strong>参考链接</strong></h3><ul>\n<li><a href=\"https://segmentfault.com/a/1190000000444614\" target=\"_blank\" rel=\"noopener\">centos下配置rsyncd服务器</a></li>\n<li><a href=\"http://www.cnblogs.com/itech/archive/2009/08/10/1542945.html\" target=\"_blank\" rel=\"noopener\">RSync实现文件备份同步</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>本文主要梳理 rsync server 的基本配置与使用方式;</p>\n</blockquote>","more":"<h3 id=\"rsync-server-的几个关键配置文件\"><a href=\"#rsync-server-的几个关键配置文件\" class=\"headerlink\" title=\"rsync server 的几个关键配置文件\"></a><strong>rsync server 的几个关键配置文件</strong></h3><ol>\n<li>/etc/rsyncd.conf: 主配置文件;</li>\n<li>/etc/rsyncd.password/rsyncd.secrets: 秘钥文件;</li>\n<li>/etc/rsyncd.motd: rysnc 服务器元信息, 非必须;</li>\n</ol>\n<p>其中, rsyncd.password 秘钥文件的掩码必须是 600:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; ll /etc/ | grep rsyncd</span><br><span class=\"line\">-rw-r--r--   1 root root    361 Apr  6  2017 rsyncd.conf</span><br><span class=\"line\">-rw-------   1 root root     24 Apr  6  2017 rsyncd.password</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"rsyncd-conf-配置说明\"><a href=\"#rsyncd-conf-配置说明\" class=\"headerlink\" title=\"rsyncd.conf 配置说明\"></a><strong>rsyncd.conf 配置说明</strong></h3><p>一个典型的 rsyncd.conf 文件如下:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># rsyncd 守护进程运行系统用户全局配置, 可在具体的块中配置</span></span><br><span class=\"line\">uid=nobody</span><br><span class=\"line\">gid=nobody</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 是否需要 chroot, 若为 yes, 当客户端连接某模块时, 首先 chroot 到 模块的 path 目录下</span></span><br><span class=\"line\">user chroot = no</span><br><span class=\"line\"></span><br><span class=\"line\">max connections = 200</span><br><span class=\"line\">timeout = 600</span><br><span class=\"line\"></span><br><span class=\"line\">pid file = /data1/trans_file/rsyncd.pid</span><br><span class=\"line\">lock file = /data1/trans_file/rsyncd.lock</span><br><span class=\"line\"><span class=\"built_in\">log</span> file = /data1/trans_file/rsyncd.log</span><br><span class=\"line\"><span class=\"comment\"># 用户秘钥文件, 可在具体的模块中配置</span></span><br><span class=\"line\">secrets file = /etc/rsyncd.password</span><br><span class=\"line\"><span class=\"comment\"># 服务器元信息, 非必选</span></span><br><span class=\"line\"><span class=\"comment\"># motd file = /etc/rsyncd/rsyncd.motd</span></span><br><span class=\"line\"><span class=\"comment\"># 指定不需要压缩就可以直接传输的文件类型</span></span><br><span class=\"line\">dont compress = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 模块配置</span></span><br><span class=\"line\">[wireless_log]</span><br><span class=\"line\"><span class=\"comment\"># 模块使用的 user, 此模块将使用 rsyncd.password 文件中 sync 用户对应的秘钥进行文件传输</span></span><br><span class=\"line\">auth users = sync</span><br><span class=\"line\">path = /data1/trans_file/files/wireless_log</span><br><span class=\"line\">ignore errors</span><br><span class=\"line\"><span class=\"comment\"># 是否只读</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> only = no</span><br><span class=\"line\"><span class=\"comment\"># 是否允许列出模块里的内容</span></span><br><span class=\"line\">list = no</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"rsyncd-password-rsyncd-secrets-配置说明\"><a href=\"#rsyncd-password-rsyncd-secrets-配置说明\" class=\"headerlink\" title=\"rsyncd.password / rsyncd.secrets 配置说明\"></a><strong>rsyncd.password / rsyncd.secrets 配置说明</strong></h3><p>以 <code>:</code> 分隔, 用户名和密码, 每行一个:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user1:password1</span><br><span class=\"line\">user2:password2</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"rsyncd-启动方式\"><a href=\"#rsyncd-启动方式\" class=\"headerlink\" title=\"rsyncd 启动方式\"></a><strong>rsyncd 启动方式</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 当负载高时, 以守护进程的方式运行 rsyncd</span></span><br><span class=\"line\">sudo /usr/bin/rsync --daemon --config=/etc/rsyncd.conf</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a><strong>参考链接</strong></h3><ul>\n<li><a href=\"https://segmentfault.com/a/1190000000444614\" target=\"_blank\" rel=\"noopener\">centos下配置rsyncd服务器</a></li>\n<li><a href=\"http://www.cnblogs.com/itech/archive/2009/08/10/1542945.html\" target=\"_blank\" rel=\"noopener\">RSync实现文件备份同步</a></li>\n</ul>"},{"title":"财富先锋 2017 年各股池成绩单","date":"2017-12-31T14:00:00.000Z","_content":"\n> 综合来看, 同花顺财富先锋 2017 年的几个股池系统的年度收益率还是比较令人满意的;\n'热点轮动', '股东增持' 两个股池系统的收益率达到了 200%, '支撑压力' 股池系统的收益率超过 150%;\n不过 '多头趋势' 股池系统的表现比较糟糕, 2017 年净收益为负;\n另外还有 '深一度' 股池系统的收益率未显示相关指标, 暂无法统计;\n各个股池系统 2017 年度收益率的指标, 反映出了各个选股策略在 2017 年 A 股市场上的成效; 以此为鉴, 2018 年的中国资本市场, 我们继续前行;\n\n<!--more-->\n\n### **支撑压力**\n![2017 支撑压力 final review](https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_%E6%94%AF%E6%92%91%E5%8E%8B%E5%8A%9B.png)\n\n### **热点轮动**\n![2017 热点轮动 final review](https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_%E7%83%AD%E7%82%B9%E8%BD%AE%E5%8A%A8.png)\n\n### **股东增持**\n![2017 股东增持 final review](https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_%E8%82%A1%E4%B8%9C%E5%A2%9E%E6%8C%81.png)\n\n### **多头趋势**\n![2017 多头趋势 final review](https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_多头趋势.png)\n","source":"_posts/证券-财富先锋--财富先锋2017年各股池成绩单.md","raw":"---\ntitle: 财富先锋 2017 年各股池成绩单\ndate: 2017-12-31 22:00:00\ntags:\n  - 证券:财富先锋\ncategories:\n  - 证券\n  - 财富先锋\n---\n\n> 综合来看, 同花顺财富先锋 2017 年的几个股池系统的年度收益率还是比较令人满意的;\n'热点轮动', '股东增持' 两个股池系统的收益率达到了 200%, '支撑压力' 股池系统的收益率超过 150%;\n不过 '多头趋势' 股池系统的表现比较糟糕, 2017 年净收益为负;\n另外还有 '深一度' 股池系统的收益率未显示相关指标, 暂无法统计;\n各个股池系统 2017 年度收益率的指标, 反映出了各个选股策略在 2017 年 A 股市场上的成效; 以此为鉴, 2018 年的中国资本市场, 我们继续前行;\n\n<!--more-->\n\n### **支撑压力**\n![2017 支撑压力 final review](https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_%E6%94%AF%E6%92%91%E5%8E%8B%E5%8A%9B.png)\n\n### **热点轮动**\n![2017 热点轮动 final review](https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_%E7%83%AD%E7%82%B9%E8%BD%AE%E5%8A%A8.png)\n\n### **股东增持**\n![2017 股东增持 final review](https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_%E8%82%A1%E4%B8%9C%E5%A2%9E%E6%8C%81.png)\n\n### **多头趋势**\n![2017 多头趋势 final review](https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_多头趋势.png)\n","slug":"证券-财富先锋--财富先锋2017年各股池成绩单","published":1,"updated":"2018-01-02T16:07:44.593Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz864gm0000qrjxxhguix8a","content":"<blockquote>\n<p>综合来看, 同花顺财富先锋 2017 年的几个股池系统的年度收益率还是比较令人满意的;<br>‘热点轮动’, ‘股东增持’ 两个股池系统的收益率达到了 200%, ‘支撑压力’ 股池系统的收益率超过 150%;<br>不过 ‘多头趋势’ 股池系统的表现比较糟糕, 2017 年净收益为负;<br>另外还有 ‘深一度’ 股池系统的收益率未显示相关指标, 暂无法统计;<br>各个股池系统 2017 年度收益率的指标, 反映出了各个选股策略在 2017 年 A 股市场上的成效; 以此为鉴, 2018 年的中国资本市场, 我们继续前行;</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"支撑压力\"><a href=\"#支撑压力\" class=\"headerlink\" title=\"支撑压力\"></a><strong>支撑压力</strong></h3><p><img src=\"https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_%E6%94%AF%E6%92%91%E5%8E%8B%E5%8A%9B.png\" alt=\"2017 支撑压力 final review\"></p>\n<h3 id=\"热点轮动\"><a href=\"#热点轮动\" class=\"headerlink\" title=\"热点轮动\"></a><strong>热点轮动</strong></h3><p><img src=\"https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_%E7%83%AD%E7%82%B9%E8%BD%AE%E5%8A%A8.png\" alt=\"2017 热点轮动 final review\"></p>\n<h3 id=\"股东增持\"><a href=\"#股东增持\" class=\"headerlink\" title=\"股东增持\"></a><strong>股东增持</strong></h3><p><img src=\"https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_%E8%82%A1%E4%B8%9C%E5%A2%9E%E6%8C%81.png\" alt=\"2017 股东增持 final review\"></p>\n<h3 id=\"多头趋势\"><a href=\"#多头趋势\" class=\"headerlink\" title=\"多头趋势\"></a><strong>多头趋势</strong></h3><p><img src=\"https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_多头趋势.png\" alt=\"2017 多头趋势 final review\"></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>综合来看, 同花顺财富先锋 2017 年的几个股池系统的年度收益率还是比较令人满意的;<br>‘热点轮动’, ‘股东增持’ 两个股池系统的收益率达到了 200%, ‘支撑压力’ 股池系统的收益率超过 150%;<br>不过 ‘多头趋势’ 股池系统的表现比较糟糕, 2017 年净收益为负;<br>另外还有 ‘深一度’ 股池系统的收益率未显示相关指标, 暂无法统计;<br>各个股池系统 2017 年度收益率的指标, 反映出了各个选股策略在 2017 年 A 股市场上的成效; 以此为鉴, 2018 年的中国资本市场, 我们继续前行;</p>\n</blockquote>","more":"<h3 id=\"支撑压力\"><a href=\"#支撑压力\" class=\"headerlink\" title=\"支撑压力\"></a><strong>支撑压力</strong></h3><p><img src=\"https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_%E6%94%AF%E6%92%91%E5%8E%8B%E5%8A%9B.png\" alt=\"2017 支撑压力 final review\"></p>\n<h3 id=\"热点轮动\"><a href=\"#热点轮动\" class=\"headerlink\" title=\"热点轮动\"></a><strong>热点轮动</strong></h3><p><img src=\"https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_%E7%83%AD%E7%82%B9%E8%BD%AE%E5%8A%A8.png\" alt=\"2017 热点轮动 final review\"></p>\n<h3 id=\"股东增持\"><a href=\"#股东增持\" class=\"headerlink\" title=\"股东增持\"></a><strong>股东增持</strong></h3><p><img src=\"https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_%E8%82%A1%E4%B8%9C%E5%A2%9E%E6%8C%81.png\" alt=\"2017 股东增持 final review\"></p>\n<h3 id=\"多头趋势\"><a href=\"#多头趋势\" class=\"headerlink\" title=\"多头趋势\"></a><strong>多头趋势</strong></h3><p><img src=\"https://raw.githubusercontent.com/zshell-zhang/static-content/master/finance/rcmd_diary/2017_recommend_review_多头趋势.png\" alt=\"2017 多头趋势 final review\"></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjbz7uhor0000g5jxdw7uyhdt","category_id":"cjbz7uhp80003g5jxo99jvhj8","_id":"cjbz7uhpv000ng5jx0i5ktdlj"},{"post_id":"cjbz7uhor0000g5jxdw7uyhdt","category_id":"cjbz7uhps000hg5jxmu8v6dix","_id":"cjbz7uhpw000pg5jxa5ct0fcx"},{"post_id":"cjbz7uhp30002g5jxntc53r14","category_id":"cjbz7uhp80003g5jxo99jvhj8","_id":"cjbz7uhpy000sg5jxunds7549"},{"post_id":"cjbz7uhp30002g5jxntc53r14","category_id":"cjbz7uhps000hg5jxmu8v6dix","_id":"cjbz7uhpy000tg5jx0lxdvsh8"},{"post_id":"cjbz7uhpb0005g5jxdru05zrh","category_id":"cjbz7uhp80003g5jxo99jvhj8","_id":"cjbz7uhpz000ug5jxsh4cpcy5"},{"post_id":"cjbz7uhpb0005g5jxdru05zrh","category_id":"cjbz7uhps000hg5jxmu8v6dix","_id":"cjbz7uhpz000vg5jxy2b1erd7"},{"post_id":"cjbz8011y0000l1jxnqav3xz3","category_id":"cjbz7uhpq000eg5jxpg4t67d2","_id":"cjbz801280002l1jxx0qv1d9p"},{"post_id":"cjbz864gm0000qrjxxhguix8a","category_id":"cjbz7uhpv000lg5jxi173idpe","_id":"cjbz864h00002qrjxcn8fb965"},{"post_id":"cjbz864gm0000qrjxxhguix8a","category_id":"cjbz7uhpx000rg5jxu5hedhb6","_id":"cjbz864h00003qrjxo7nadeq6"}],"PostTag":[{"post_id":"cjbz7uhor0000g5jxdw7uyhdt","tag_id":"cjbz7uhpa0004g5jxtz18o211","_id":"cjbz7uhpo000ag5jxzbowpaaq"},{"post_id":"cjbz7uhp30002g5jxntc53r14","tag_id":"cjbz7uhpa0004g5jxtz18o211","_id":"cjbz7uhpq000dg5jxhunhjmx5"},{"post_id":"cjbz7uhpb0005g5jxdru05zrh","tag_id":"cjbz7uhpa0004g5jxtz18o211","_id":"cjbz7uhpr000gg5jxrevmh1vz"},{"post_id":"cjbz8011y0000l1jxnqav3xz3","tag_id":"cjbz7uhpr000fg5jxcr1wbbef","_id":"cjbz801270001l1jx8lloyxws"},{"post_id":"cjbz864gm0000qrjxxhguix8a","tag_id":"cjbz7uhpt000ig5jx64wvdahc","_id":"cjbz864gy0001qrjxg84wipyx"}],"Tag":[{"name":"linux:shell","_id":"cjbz7uhpa0004g5jxtz18o211"},{"name":"rsync","_id":"cjbz7uhpr000fg5jxcr1wbbef"},{"name":"证券:财富先锋","_id":"cjbz7uhpt000ig5jx64wvdahc"}]}}